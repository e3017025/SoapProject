<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="JP-soapui-test-project" resourceRoot="${projectDir}" soapui-version="5.3.0" scriptLibrary="" abortOnError="false" runType="SEQUENTIAL" id="54ef1631-9b13-422f-aa5c-eb92015ff600" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value="g_environment=FT44"/>
  <con:entry key="TestSuite" value="BaseTestCases"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="true"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="315 MPTU-SourceOfFunds_Replace-Account [Alternative Case]"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="O:\Test\JetPay\JP-soapui-workspace\JP-soapui-projects\data\jp-soapui-test-report"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">false</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="WsdlSettings@cache-wsdls">false</con:setting>
  </con:settings>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Security" type="rest" basePath="/mrs/3/security" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-05-ep-rest-security-spec\src\main\resources\matm-265-100-05-ep-rest-security_v3.wadl" id="1e2eef54-577a-4818-a86d-9a6ec9cb2e58" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
      <con:endpoint>http://rest.monitise.com</con:endpoint>
    </con:endpoints>
    <con:resource name="RSAPublicKey" path="RSAPublicKey" id="e0c0465b-30c4-4e00-b9b2-aca64e67e2ff">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Security Key - getSecurityKey" method="GET" id="a0625da1-0c91-44fe-8b36-168365f8793c">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Cookie</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="c5f7c566-91a4-402e-acc0-cd004533b4cf" mediaType="application/xml">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Session" path="session" id="a963fd56-d280-4286-b89c-4e4f83e261e1">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Session - getSession" method="POST" id="99913646-0a6e-41c7-ab28-e5c93b7eb441">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Cookie</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="758410fb-1d48-4409-8ca7-ba51d788d0ac" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Close Session - closeSession" method="DELETE" id="95496fe9-0cad-45ed-a4b2-0cae4d185806">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="ef13677c-98c0-4e53-b40b-e69bf1322785" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Credential" path="credential" id="b231224a-c219-40af-b159-d0a6eb2ac202">
      <con:settings/>
      <con:parameters/>
      <con:method name="Add Credentials - addCredentials" method="POST" id="c2fb04c6-aa22-43d6-8a47-5e62f28570a7">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Cookie</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="b66f746d-bcd4-4a42-9e44-f1c35a803bf5" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Update Credentials - updateCredentials" method="PUT" id="e272ddd4-1858-4a69-ade8-05fd47f99bd2">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="9a3bc484-a720-45fd-aae1-768c05933875" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Get Forgotten Credentials - getCredentials" method="GET" id="8087ba0b-bbf7-4f5d-a7ef-92aba08c241b">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>msisdn</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>guid</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>email</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>issuerName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>clientVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>clientType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>userID</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>applicationName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="1ecdfe90-598e-4beb-8f1a-9df5bfc88bee" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="SecurityQuestions" path="credential/questions" id="46ea708b-915a-4152-a1d1-97af237f8460">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Security Questions - getSecurityQuestions" method="GET" id="912fb17b-5612-4d66-ad92-7ec2202b5ece">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Language</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="f4df131e-4849-4784-acb6-b89b9dfe88d6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="SecurityQuestionAnswers" path="credential/answers" id="ba8e203b-af6d-4ea8-8b7d-d10a9eb87aa2">
      <con:settings/>
      <con:parameters/>
      <con:method name="Set Security Question Answers - setSecurityQuestionAnswers" method="POST" id="78d68e1c-90e8-4c85-aac8-1b9dd805261d">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="f7b60dde-f99b-410c-9fdd-50b55216c358" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Verify Security Question Answers - verifySecurityQuestionAnswers" method="PUT" id="5ebce787-f9df-40a9-82d9-ddf62f3158f8">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="b6f4b9b1-f783-44d9-ac2d-49f3b2da64e8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="SecurityQuestionChallenge" path="credential/questions/challenge" id="55c6a0fd-7d69-40fe-a166-caace4cb4660">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Security Credential Questions Challenge - getSecurityCredentialQuestionsChallenge" method="GET" id="e2f12aa7-df40-425d-b5f2-baa9e12e2fa6">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="882c4c32-08a3-42a4-90dd-7eab0ebd4d26" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CredentialChallenge" path="credential/challenge" id="b6f2d4e9-fa6d-4b7a-985c-848ec44cc2ff">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Credential Challenge - credentialChallenge" method="GET" id="db844c9a-5ee6-49f2-a3ed-5c6a89737b80">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>guid</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>token</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="76050d9d-492c-417d-82a2-db2bcff2282b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CredentialChallengeAnswer" path="credential/challenge/answer" id="9e8c3206-d2eb-4831-943c-cc84762bc148">
      <con:settings/>
      <con:parameters/>
      <con:method name="Set Credential Challenge Answer - setCredentialChallengeAnswer" method="POST" id="59265989-8119-4d5e-aa70-9d0a2d876adf">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="357d15df-7d17-4e85-b674-3cf7b146adf2" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="SamlAssertion" path="identity/assertion" id="6d6f4f26-fcc9-41dc-8229-e3ebd1bcd621">
      <con:settings/>
      <con:parameters/>
      <con:method name="Request SAML Assertion - getSAMLAssertion" method="GET" id="1b4aba6f-27a8-4f0c-adf6-ef911877ccb4">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>SAMLRequest</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>SAMLEncoding</con:name>
            <con:value>urn:oasis:names:tc:SAML:2.0:bindings:URL-Encoding:DEFLATE</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>urn:oasis:names:tc:SAML:2.0:bindings:URL-Encoding:DEFLATE</con:default>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" id="113be68f-8aa1-44b7-99db-0fd204b0cfe8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="PasscodeVerification" path="credential/passcode" id="64466f4e-f4c5-4743-a800-1c739930eb7b">
      <con:settings/>
      <con:parameters/>
      <con:method name="Create Passcode Verification - createPasscodeVerification" method="POST" id="3d2a9f24-3b56-457e-856e-4de4e9eeb820">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="6adc0d3c-0308-47f1-b477-f5be50b285d8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - MPTU" type="rest" basePath="/mrs/3/mptu" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-11-ep-rest-mptu-spec\src\main\resources\matm-265-100-11-ep-rest-mptu_v3.wadl" id="0a52ae39-4dee-4aee-81b2-9717283fc970" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
      <con:endpoint>http://rest.monitise.com</con:endpoint>
    </con:endpoints>
    <con:resource name="Carrier" path="carrier" id="9e585c26-6ff8-4e5f-933a-c29fefc8a781">
      <con:settings/>
      <con:parameters/>
      <con:method name="Obtain MPTU Carriers - obtainMPTUCarriers" method="GET" id="5b452058-f1de-4a7f-819a-9935d5a31494">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="feddfd83-5978-4bc8-bb5a-deceb05a73e5" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="MPTUAlias" path="alias" id="fe678fa2-172c-447b-b64a-bbfec0530ecf">
      <con:settings/>
      <con:parameters/>
      <con:method name="Create MPTU Alias - createMPTUAlias" method="POST" id="c80bf26d-6617-4c17-ae32-f7d2922c8529">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="5badbff1-1356-4414-a508-0d5fdd802bb5" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Get MPTU Aliases - getMPTUAliases" method="GET" id="61c2eb3e-1262-4658-9b60-429139067ca1">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="5633286a-77f1-459e-9d37-7902244ca99c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="alias/{aliasName}" path="alias/{aliasName}" id="18b1e2ea-e1f0-4278-b6f5-f9def2b9fc0e">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get MPTU Alias - getMPTUAlias" method="GET" id="e76b0450-5556-405c-aac4-fbf378c072d9">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>aliasName</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="4d4a5494-f153-4979-a2f1-be7b7b2bb57e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Update MPTU Alias - updateMPTUAlias" method="PUT" id="be883fe0-388c-4a9a-888e-0fca9e791a40">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>aliasName</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="2bcdef6d-3c7d-429d-bce8-b26518985c62" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Delete MPTU Alias - deleteMPTUAlias" method="DELETE" id="cd5e7280-ba60-40bf-a8df-ea81d2cda084">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>aliasName</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="a1ab01ab-4ecd-497e-8351-8b235b445a5e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="MPTUTransaction" path="transaction" id="a52c4361-38bd-411a-b2ef-7ab318338c6d">
      <con:settings/>
      <con:parameters/>
      <con:method name="Create MPTU Transaction - createMPTUTransaction" method="POST" id="405d845c-f712-4e72-be7b-ac72c00b59e6">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="79d716f6-fe04-4e8e-8eb1-61791da7a55a" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Get MPTU Transaction History - getTransactionHistory" method="GET" id="6bcf693d-61d1-4e9c-a666-f935ee8b4524">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="d14027a3-0b1f-4e8e-a952-0f8f0cfbdb0d" mediaType="application/xml">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="transaction/{transactionId}" path="transaction/{transactionId}" id="a47024c6-558a-467a-a958-a761a8eb5c81">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get MPTU Transaction - getTransaction" method="GET" id="74c8ca38-423d-4149-a72b-9a0103074f0b">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>transactionId</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="7f72d7cb-474c-4d0c-9f5d-48a85070aa83" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="MPTUAmounts" path="carrier/amount" id="9ea49bdd-160d-4773-8efb-b439a5cb3893">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Carrier MPTU Pre-Defined Amounts - obtainMPTUAmount" method="GET" id="721f4692-cb4d-4d84-b317-d6111f4b258c">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>carrier</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="de956c47-e1fc-40e9-a3ed-d49f9b783fe8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Customer" type="rest" basePath="/mrs/3" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-08-ep-rest-customer-spec\src\main\resources\matm-265-100-08-ep-rest-customer_v3.wadl" id="aa6a9faa-714e-4612-ae34-d5fcf535cea6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
    </con:endpoints>
    <con:resource name="Customer" path="customer" id="45e72d7c-c5fd-4535-9e1f-f45b1d019e1c">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Customer - getCustomer" method="GET" id="9696bcb9-809d-4e0c-860d-9cc1248cf753">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="dcd83bb1-37c0-4cc9-8eec-f894cf63a247" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Update Customer - updateCustomer" method="PUT" id="ab83f53a-09d1-4de3-b810-362d071edf0b">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="329a6539-ae19-4d30-a86a-a5f922e7605f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Delete Customer - deleteCustomer" method="DELETE" id="ee30bbed-50a7-433e-9a84-de181163281e">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="09a90b87-ceb0-4df4-94e4-726330703221" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Customer Identifier" path="customer/identifier" id="04c3c1b8-6548-46ab-a8ed-fb3969853ff2">
      <con:settings/>
      <con:parameters/>
      <con:method name="Create Customer Identifier - createCustomerIdentifier" method="POST" id="046b42c7-c370-4384-b44e-922edd472162">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="581a443c-75fb-4d46-bf76-87d69a3e596b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="customer/identifier/{customerIdentifierType}" path="customer/identifier/{customerIdentifierType}" id="e9c3b0b4-1dcc-41fb-b40a-2eea8dcda2b0">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Customer Identifier - getCustomerIdentifier" method="GET" id="6aa24bd9-565f-47f3-846b-4b32762a45ed">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>customerIdentifierType</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="7b94841d-4a61-4943-99e5-7ed6e9b8bfb2" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Update Customer Identifier - updateCustomerIdentifier" method="PUT" id="acd8d2a6-6008-478c-a192-34839886085c">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>customerIdentifierType</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="c5cd07e2-976f-41f1-8c6a-a2578d0c80ef" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="customer/identifier/{customerIdentifierType}/{customerIdentifierTypeValue}" path="customer/identifier/{customerIdentifierType}/{customerIdentifierTypeValue}" id="d3e8e2bf-306d-40bc-974d-742600500600">
      <con:settings/>
      <con:parameters/>
      <con:method name="Delete Customer Identifier - deleteCustomerIdentifier" method="DELETE" id="119b8758-089b-4e37-81ca-e3a3e1c7d372">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>customerIdentifierType</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>customerIdentifierTypeValue</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="cf44778c-71d9-438c-bb28-f46e438f5e42" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Customer Identifier Verification Code" path="customer/identifier/verificationCode" id="f5d2bfa0-8591-4590-a43f-57d32fc488eb">
      <con:settings/>
      <con:parameters/>
      <con:method name="Request Verification Code for a Customer Identifier - createCustomerIdentifierVerificationCode" method="POST" id="6ad62d4d-a414-4200-a7ec-6032fcc3e56b">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="a8248118-6e2e-41ab-ab2a-057e3f90b6bd" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Request Re-send of Verification Code for a Customer Identifier - resendCustomerIdentifierVerificationCode" method="PUT" id="135614dc-8e8f-4a43-a812-178d1040c222">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="8ebc3d1f-1997-44e1-a680-a07a428159f5" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Marketing Entity" path="customer/marketingEntity/{customerIdentifierType}/{customerIdentifierValue}" id="519e45e2-7605-41f7-bfb9-b78207acb489">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Customer Identifier - getMarketingEntity" method="GET" id="22bc803f-cf73-4aeb-942f-eb8fdc1ceb37">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>customerIdentifierType</con:name>
            <con:value/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>customerIdentifierValue</con:name>
            <con:value/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="0c225d86-e32c-41d0-baca-7855b4b84e0e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="customer/marketingEntity" path="customer/marketingEntity" id="dd1d56c9-fa93-4a39-8ded-36296b582768">
      <con:settings/>
      <con:parameters/>
      <con:method name="Set_Marketing_Entity - setMarketingEntity" method="PUT" id="74820a0b-eecd-4e5a-bfa1-ce122a96dd2c">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="d57b27bb-e60d-4b4d-bb64-87a478dd9f6f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Customer Registration Identifier" path="customer/rid" id="493fd695-aee6-4b53-ad2f-8dd32448a506">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Customer Registration Identifier - getCustomerRegistrationIdentifier" method="GET" id="043f9258-136e-4606-a524-98c703785341">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="ad6ed3f9-a40f-4090-ba63-8c7f9ff79a21" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Client" type="rest" basePath="/mrs/3/client" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-15-ep-rest-client-spec\src\main\resources\matm-265-100-15-ep-rest-client_v3.wadl" id="f7fca3fc-d817-46a2-a9e2-0e12995bc2b0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
      <con:endpoint>http://rest.monitise.com</con:endpoint>
    </con:endpoints>
    <con:resource name="Client Upgrade" path="upgrade" id="b9729613-761e-43cb-9ee8-638fdc23520f">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Client Upgrade - getClientUpgrade" method="GET" id="d56c3575-d302-48ca-a45d-b4de4018dd36">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>clientVersion</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>clientType</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>applicationName</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="ba66fb8b-4998-4370-9362-4bcae774fda4" mediaType="application/xml">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Activation" type="rest" basePath="/mrs/3" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-01-ep-rest-activation-spec\src\main\resources\matm-265-100-01-ep-rest-activation_v3.wadl" id="a816d815-70e7-4800-9e9f-0a2966620899" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
    </con:endpoints>
    <con:resource name="activationCode" path="activationCode" id="e8751cda-3227-4ef1-b637-eee9f1f4b50e">
      <con:settings/>
      <con:parameters/>
      <con:method name="Request Activation Code - requestActivationCode" method="GET" id="d5c3fa41-f216-4cbc-883e-458a3b0768ed">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>msisdn</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>email</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>issuerName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>clientVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>clientType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>applicationName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="e4c743c7-4a86-4a73-ac84-d4fe42488cd8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/><con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="activation" path="activation" id="c4ad2a85-e40e-4913-8f4a-3222be8df116">
      <con:settings/>
      <con:parameters/>
      <con:method name="Request Activation - requestActivation" method="POST" id="b60abf7c-0f0e-4fec-a763-25b1e93d2e91">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Cookie</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="d6bb8a9e-51ea-4e0d-8873-3ef6f4264144" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Replace Activation - replaceActivation" method="PUT" id="0b24a7c1-38b7-4e9f-9e70-6ec5cbecf08b">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="5fe70507-d77e-4f4d-a246-898a77bdadb4" mediaType="application/xml" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Delete Activation - deleteActivation" method="DELETE" id="1d1e5c9c-782d-48e8-bbf3-1bd354d7f50d">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Set-Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="51ccc068-6d93-4219-91de-430c3530db40" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="activation" path="activation/emailAddress" id="9d799b74-1c44-4bcf-9cb8-a796bf5b4c84">
      <con:settings/>
      <con:parameters/>
      <con:method name="Request Activation Email - requestActivationEmail" method="POST" id="0dbe4d78-fea3-46cc-82a0-cc38b9ba65a3">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>email</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>issuerName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>clientVersion</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>clientType</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>applicationName</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="bcddf6ac-d2f9-4084-96b5-0ce0ea858a53" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Ping" type="rest" basePath="/mrs/3" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-14-ep-rest-ping-spec\src\main\resources\matm-265-100-14-ep-rest-ping_v3.wadl" id="add4da92-4276-4c75-9278-edc91c5080be" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
    </con:endpoints>
    <con:resource name="Ping" path="ping" id="3a083c85-9712-4427-9422-e02ff18862b5">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Ping - getPing" method="GET" id="a1315c0d-f0b9-4d5a-b6a3-b78445d2f630">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Cookie</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" id="9c7df587-1343-4a66-81cd-1284d9511232" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Account" type="rest" basePath="/mrs/3" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-06-ep-rest-account-spec\src\main\resources\matm-265-100-06-ep-rest-account_v3.wadl" id="06ddbbc3-61e5-4d49-9019-992fd66bcd97" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#p_endpoint}</con:endpoint>
      <con:endpoint>http://rest.monitise.com</con:endpoint>
    </con:endpoints>
    <con:resource name="Account Verification Questions" path="account/verification/questions" id="ecd4b185-ed62-403d-af71-de42bec826ab">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Account Verification Questions - getAccountVerificationQuestions" method="GET" id="41f5f745-77b4-4967-898d-7940e6cd951a">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>issuerUsername</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>PAN</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>surname</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>dateOfBirth</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>sortCode</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>accountNumber</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="d54300e7-b10a-4419-b8e9-5b1efdc96251" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Account Verification Question Answers" path="account/verification/answers" id="7582ac37-0ccb-4c1e-82b3-0741351f0fe9">
      <con:settings/>
      <con:parameters/>
      <con:method name="Verify Account Verification Question Answers - verifyAccountVerificationQuestionAnswers" method="PUT" id="8fb24a0b-9e4a-494e-9642-ec23beab8c96">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="7034f8b1-65ae-4ab2-aa88-1244f103d9a1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Account Details List" path="account" id="13430cf2-5b49-4551-92f9-4ea2512b155d">
      <con:settings/>
      <con:parameters/>
      <con:method name="Create Account - createAccountDetails" method="POST" id="30df3ce5-5962-4151-9267-6bf148e091eb">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="1aa57cbd-32b2-4d0d-ba5f-c3532689d12b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Get Accounts - getAccountDetails" method="GET" id="e9cbfc07-62c6-470e-a2fe-d6c7cd62d704">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="6932e683-7939-4c17-a73f-8f5ab1b4e8de" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Account Details" path="account/{accountAlias}" id="d60575e8-2513-4bed-9e7e-556566be4842">
      <con:settings/>
      <con:parameters/>
      <con:method name="Update Account - updateAccountDetails" method="PUT" id="e8949cdf-f9e6-4587-aa93-4c6548dcecbe">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>accountAlias</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>newAccountAlias</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="3df5d9bf-1ab0-4321-a96d-603cc235e580" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Delete Account - deleteAccountDetails" method="DELETE" id="c7dc9265-d71d-411d-81ab-2dc2d9575ac0">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>accountAlias</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="d57def4f-a868-4936-b5df-67fc6f17c81d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="AccountSummary" path="account/summary" id="c365df7e-2839-4429-94f6-43c7c60875dd">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Account Summary - getAccountSummary" method="GET" id="f37302f7-8283-4c7c-a201-e5191b1fd783">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="a29447f2-d7d0-4345-b394-5a951c6685ff" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="AccountBalance" path="account/balance/{accountAlias}" id="e94759dd-0603-46c0-b605-d52429f766d5">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Account Balance - getAccountBalance" method="GET" id="f656b071-5650-4f3b-a7ac-f5683aa2c72a">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>accountAlias</con:name>
            <con:value/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="1d1e33f4-0549-4412-8db4-1723563ceab4" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="AccountStatement" path="account/statement/{accountAlias}" id="528e8296-24cc-4c33-8c0e-f3bab1cfcb7b">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Account Statement - getAccountStatement" method="GET" id="19995707-9152-4302-b384-7ea0a948e37d">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>accountAlias</con:name>
            <con:value/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>fromDate</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>toDate</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>maxRecords</con:name>
            <con:value>50</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>50</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>sequenceNumberOffset</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="c237407a-f010-46cb-97a5-310636058739" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CreditCard" path="account/credit" id="cc0941de-8e24-4110-9276-9c6fd847adc8">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Credit Card - getCreditCard" method="GET" id="247fcca4-6e9d-440b-8b6e-078d548d350b">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>accountAlias</con:name>
            <con:value/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="640e9c5a-2483-4de2-9d4f-d663426c0a24" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="InterAccountTransfer" path="account/iat" id="a3fcb6ed-6dd0-4328-8eb8-73add6ef4b31">
      <con:settings/>
      <con:parameters/>
      <con:method name="Inter Account Transfer - interAccountTransfer" method="POST" id="37064d5a-99a6-4669-acd3-6dd398cf9b73">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="81a399c3-d4af-4f0f-9b07-451a90460d24" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Account Activation List" path="account/activate" id="59896391-89f1-479d-8f31-eacd489f25fb">
      <con:settings/>
      <con:parameters/>
      <con:method name="Create Account Activation AccountActivationList - createAccountActivation" method="POST" id="99ffe173-5fb9-41c4-bf25-a49bb1c8b5bb">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>accountAlias</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>method</con:name>
            <con:value>MAILER</con:value>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>MAILER</con:default>
          </con:parameter>
          <con:parameter>
            <con:name>amount</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>cardActivationNumber</con:name>
            <con:value xsi:nil="true"/>
            <con:style>QUERY</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="98e3bfae-be1e-4052-9a00-cbfdf3a21f6c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Account Activation" path="account/activate/details/{accountAlias}" id="d2436cc4-4fbb-4f46-b2f5-a1f01e55f6bf">
      <con:settings/>
      <con:parameters/>
      <con:method name="POST - verifyYouOwnCard" method="POST" id="007f103e-83c6-41cb-af01-5a3d389760ea">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>accountAlias</con:name>
            <con:value xsi:nil="true"/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="b9988585-159f-4830-89eb-44b734c627f1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="Cashout Code" path="account/cashout/code" id="23a6fe42-96c2-408c-8cdc-1161a2f4ae14">
      <con:settings/>
      <con:parameters/>
      <con:method name="Request Cash-out Code - requestCashOutCode" method="POST" id="960bc5b4-ee22-4841-8257-e5ea9091f4ef">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="f1908e46-58b8-48e8-b7cf-39bcc9c085f6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Monitise Rest Service - Legal" type="rest" basePath="/mrs/3" definitionUrl="C:\dev\git\newPublicInterfaces\matm-265-100-10-ep-rest-legal-spec\src\main\resources\matm-265-100-10-ep-rest-legal_v3.wadl" id="5b15a2fa-c173-4b2b-a866-b0bd90279210" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>http://rest.monitise.com</con:endpoint>
    </con:endpoints>
    <con:resource name="Legal" path="legal" id="cc2086b3-9ec6-49f9-8187-5de3335efef0">
      <con:settings/>
      <con:parameters/>
      <con:method name="Get Legal - getLegal" method="GET" id="b855ebc3-b8d0-4af5-b56d-fe6af4c10e3f">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="c620a12a-f623-4e09-8688-ab5950bd3d24" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="Update Legal - updateLegal" method="PUT" id="33c6324e-df73-4ba9-aa62-0e88ba5abbe9">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Accept</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>application/json</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
          <con:parameter>
            <con:name>Accept-Encoding</con:name>
            <con:value>gzip</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>gzip</con:default>
          </con:parameter>
          <con:parameter required="true">
            <con:name>X-Request-Id</con:name>
            <con:value xsi:nil="true"/>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Cookie</con:name>
            <con:value>JSESSIONID=</con:value>
            <con:style>HEADER</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default>JSESSIONID=</con:default>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" id="c7f47ab2-6d0e-4fea-8bdd-0ec869e83fdf" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://rest.monitise.com</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite name="STORIES" id="b7cebd84-16e2-4aa1-9059-a7208bf49633">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="__TEST RUN SETUP" searchProperties="true" id="a2106496-02fd-4625-9573-61b86b257618">
      <con:settings/>
      <con:testStep type="calltestcase" name="TestRunnerSetup" id="30cdc01f-7c06-420f-8770-e3fae0562c51">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>05708d93-ea01-459d-b031-e354fee2e9c7</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>c_environment</con:name>
              <con:value>${#TestCase#c_environment}</con:value>
            </con:property>
            <con:property>
              <con:name>c_region</con:name>
              <con:value>${#TestCase#c_region}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>c_environment</con:name>
          <con:value>FT44</con:value>
        </con:property>
        <con:property>
          <con:name>c_region</con:name>
          <con:value>JP</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="App Launch Version Upgrade Checked" searchProperties="true" id="070c6bb9-589f-4cf1-aacc-1383b79575a6">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="abd182e6-e194-41d2-b11c-7dcf2fb207e3">
        <con:settings/>
        <con:config>
          <script>log.info "Client type set to " + context.testCase.getPropertyValue("v_clientType").toUpperCase()</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Launch App (No Upgrade)" id="0a5a4dca-a854-438b-b75e-7fb96b3c52ed">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>3fb1ec48-e22d-47f4-9f5d-b3d43ae2d8e1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="New Customer Registration iPhone" searchProperties="true" id="e3381673-0486-4da9-a33f-d759bef0335b">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1">
        <con:settings/>
        <con:config>
          <script>testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Setting up SCENARIO test data"
log.info "Client type set to " + context.testCase.getPropertyValue("v_clientType").toUpperCase()
log.info "Random MSISDN " + newMsisdn + " generated"

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="a5f5da8e-f595-402f-9ed6-535a54ff91a1">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4b97f8d1d6e60cf1558e22d11c7d</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1009005</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>63ac16e901aad99a1a</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="8a45efe0-44e4-441a-8fe7-c84e37b98ccf">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Ping" id="386790bf-444a-4b5c-842c-b4f666c646e2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>31537902-74d0-4451-9bf9-4c260dcb2f56</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="6a23e5dd-4130-4375-abf8-e13509b04222">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon" id="6275fb30-1080-43a3-b073-7c7a52433cca">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4b9843345354f06ead230e7f006f</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="6213ef93-8bfa-4e8a-ae00-3105546e9598">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Logon")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Ping1" id="d6c1d640-8e6b-4d71-9b13-35ad93e577f3">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>31537902-74d0-4451-9bf9-4c260dcb2f56</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff" id="635df206-c746-4922-b904-9dde287ad5f9">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237005858</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>63ac16e901aad99a1a</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=4b9843345354f06ead230e7f006f</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1009005</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8a45efe0-44e4-441a-8fe7-c84e37b98ccf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a5f5da8e-f595-402f-9ed6-535a54ff91a1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="New Customer Registration Android (using Device Token)" searchProperties="true" id="9b9cf077-22bb-4c08-9c9d-2b16388c29bc">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="6793128a-949a-44ba-8f27-1b521a895f62">
        <con:settings/>
        <con:config>
          <script>log.info "Setting up SCENARIO test data"

// Generate MSISDN
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Random MSISDN " + newMsisdn + " generated"

// Generate Device Token
log.info "Client type set to " + context.testCase.getPropertyValue("v_clientType").toUpperCase()
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateImei"].testSteps["generateImei"].run(testRunner, context)
def imei = context.imeiGenerator.getImei()
context.testCase.setPropertyValue("v_clientDeviceID", imei )
log.info "Setting IMEI: " + imei + " as Device Token"</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="a1e5abaf-31fa-477e-84e8-24f90f8b5bc7">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba0cbee1c7852d761a33aab67e3b</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008370</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>b2cc617ef14db8c919</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="51c50498-8d16-4d36-ad1b-c6e10ca70177">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Ping" id="0476d5bb-e3f8-4fd0-b94e-408f5118a6a2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>31537902-74d0-4451-9bf9-4c260dcb2f56</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="07b63a82-f66a-4843-a08f-ed8a514c9535">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon" id="f1e2bacc-e030-4277-8f49-bea9d3a18465">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba0d41bab140a0d6c82f92bffe74</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="f9df8219-71b6-47fb-bb07-d8536d41e5c0">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Logon")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Ping1" id="2f131db1-eb1a-4ea6-b95d-97e6f5312fff">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>31537902-74d0-4451-9bf9-4c260dcb2f56</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff" id="03d321b6-8a35-4ff4-bb8e-21c9565a3429">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>Android</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientType2</con:name>
          <con:value>Android</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value>991360625977984</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237008911</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>b2cc617ef14db8c919</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba0d41bab140a0d6c82f92bffe74</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008370</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8a45efe0-44e4-441a-8fe7-c84e37b98ccf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a5f5da8e-f595-402f-9ed6-535a54ff91a1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="New Customer Accepts T&amp;Cs" searchProperties="true" id="4bb9e610-54a2-473b-b168-79ee9c4566e2" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="7198f8d3-649c-4bf6-905c-8e8840d03f3e">
        <con:settings/>
        <con:config>
          <script>testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Setting up SCENARIO test data"
log.info "Client type set to " + context.testCase.getPropertyValue("v_clientType").toUpperCase()
log.info "Random MSISDN " + newMsisdn + " generated"

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="99cc11b2-b662-4e1f-b9f4-b25169f1b269">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=e75fb111dd1d807566552f09cba3</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008547</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>7ac22dfd7293146e56</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="56e4a836-2f5a-4d49-b15d-f666af2071e6">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Accept T&amp;Cs" id="bead99f7-551d-4195-9457-669646854b5e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>bcd84785-d0a9-4a9c-b89f-9bcea7f35913</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_appTncAccept</con:name>
              <con:value>${#TestCase#v_appTncAccept}</con:value>
            </con:property>
            <con:property>
              <con:name>v_appTncVersion</con:name>
              <con:value>${#TestCase#v_appTncVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="a4c6590e-0a0e-42b7-a154-7d9119717893">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon" id="7f3aebd8-b687-447b-a87c-d4fe711a6ec3">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=e7600bf34824405526dbed4efa05</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value>true</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value>1.0</con:value>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_tncAcceptedFlag</con:entry>
            <con:entry>r_tncAcceptedVersion</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Acceptance Notice" id="e9791d4a-2c68-47be-a395-5414b29cec0d">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

def failures = []
logonTestStep = context.testCase.getTestStepByName("Logon")

expectedTncAcceptedFlag = "true"
expectedTncAcceptedVersion = context.testCase.getPropertyValue("v_appTncVersion")

actualTncAcceptedFlag = logonTestStep.getPropertyValue( "r_tncAcceptedFlag" )
actualTncAcceptedVersion = logonTestStep.getPropertyValue( "r_tncAcceptedVersion" )

if ( actualTncAcceptedFlag != expectedTncAcceptedFlag ) {
	failures.add( "Validation failure, " + logonTestStep.name + ". Expected Acceptance Flag " + expectedTncAcceptedFlag + ", but got: " + actualTncAcceptedFlag )
}
if ( actualTncAcceptedVersion != expectedTncAcceptedVersion ) {
	failures.add( "Validation failure, " + logonTestStep.name + ". Expected Acceptance Version " + expectedTncAcceptedVersion + ", but got: " + actualTncAcceptedVersion )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Login notice checked. Notice confirms TnC version: " + actualTncAcceptedVersion + " acceptance is: " + actualTncAcceptedFlag
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="565065e2-fd9c-4278-8284-a0bcd1d783e7">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Logon")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff" id="a3d4f3ca-81e3-41fe-b765-c02f1f23a8db">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237006768</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_appTncAccept</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>v_appTncVersion</con:name>
          <con:value>1.0.0</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>7ac22dfd7293146e56</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=e75fb111dd1d807566552f09cba3</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008547</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8a45efe0-44e4-441a-8fe7-c84e37b98ccf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a5f5da8e-f595-402f-9ed6-535a54ff91a1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="New Customer with Recycled MSISDN Registers" searchProperties="true" id="bf5488ae-caa9-443f-aeee-af91a56d9aad">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="e0a68275-d7aa-4d8d-a2ff-1b9911583e6c">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Selecting MSISDN " + newMsisdn + " to register...."

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register First Customer" id="cd1ef1b4-9f28-4f95-8030-59ee7a92d06e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=45acf79185264ea63b77b96cb08d</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008983</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>028ab41acc6bf7db35</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save First Registration Details" id="df88d6a8-6d50-47b0-b805-6bddc8c4b298">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register First Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff First Customer" id="e74a3212-d010-4be5-9f09-7b24e13c88a2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Recycle Msisdn" id="dad3e417-6213-4f21-8712-30382bde22b5">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

def oldMsisdn = context.testCase.getPropertyValue("v_consumerMsisdn")

log.info "Previously registered MSISDN " + oldMsisdn + " is being Re-cycled to New Customer"

context.testCase.setPropertyValue("v_consumerMsisdn2", oldMsisdn )
log.info "Registering second customer with MSISDN " + oldMsisdn</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Verify Handset Second Customer" id="ac58221e-30df-41af-af69-a389026fbdd6">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn2}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=45ad6801d41e3c7f09d7aaa51e21</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008983</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>TRUE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>028ab41acc6bf7db35</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session Second" id="8e9ece2c-fbfc-44b6-b324-cd46439d749c">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Verify Handset Second Customer")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "2") , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Existing Customer Flag" id="682853fe-3bdf-4867-92df-d9b5837297e6">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

registrationTestStep = context.testCase.getTestStepByName("Verify Handset Second Customer")

if ( registrationTestStep.getPropertyValue( "r_existingCustomerFlag" ) == "TRUE" ) {
	log.info "existingCustomerFlag is TRUE as expected. Proceeding with PUT activation to generate new GUID...."
} else {
	log.error "existingCustomerFlag is FALSE. TRUE was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Replace Activation" id="1496c4ef-a029-4402-b0d3-525e88d14755">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>e577c115-8b24-44cc-96f1-91b48812365d</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_previousHandsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn2}</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>4278c06d09faa0e84e</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008984</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            
          </con:properties>
          <con:returnProperties>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Second Customer Activation Details" id="d377af14-4387-49e8-a445-54d207a390f3">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Replace Activation")

["r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "2") , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-check Results Second Customer" id="43b4891e-3b18-459d-a1f6-50af2a45ee44">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Re-check state of Second customer after Replacement of Handset Activation
def customerID = context.testCase.getPropertyValue("t_customerID2")

def openingMessage = "Second Customer state post-Handset Verification (after activation replacement):"

if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)
def customerIdentifierID = context.queryMaker.queryMsisdnCustomerIdentifier(customerID, context.databaseConnection )

testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
context.queryRecordsSingleTable.fullCustomerStatusLog(log, context, openingMessage, customerID, customerIdentifierID)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-check Results First Customer" id="b1b890b6-9861-4e79-8d80-75d847ae655e">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Re-check state of Second customer after Replacement of Handset Activation
def customerID = context.testCase.getPropertyValue("t_customerID")

def openingMessage = "...and First Customer state is now:"

if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
//testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)
def customerIdentifierID = context.queryMaker.queryMsisdnCustomerIdentifier(customerID, context.databaseConnection )

testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
context.queryRecordsSingleTable.fullCustomerStatusLog(log, context, openingMessage, customerID, customerIdentifierID)

log.info ""
log.info "Completing Second Registration...."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Complete Second Registration (Set Passcode)" id="c61a079b-d8cd-4012-bb07-7db5e23a2733">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4f0ea742-e206-445d-b3fb-f7004b4ef764</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID2}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff Second Customer" id="176e0815-041b-49c4-bd22-1da28f8a7064">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon First Customer" id="3c4dd655-5d43-43d0-9798-a1d1c1cee62a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=45ade4018b34fc5cc4073b81933b</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="7131e827-22b5-473f-a975-a94b325f7640">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Logon First Customer")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Prep Mptu Contact Data" id="76209053-f256-44a2-99c8-131e116b4ddf">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

//setup msisdn
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", newMsisdn )

//setup alias name
tr = testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )

log.info ""
log.info "Generated MPTU Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.testSuite.getPropertyValue("v_mptuAliasMsisdn")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="First Customer Adds Mptu Contact" id="5438e424-8265-4766-85d8-6e9d1d965d88">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff First Customer Again" id="536cc3a6-0988-43af-820b-2be9e02e0878">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientType2</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237008104</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn2</con:name>
          <con:value>85237008104</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237005327</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Adrian</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>028ab41acc6bf7db35</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID2</con:name>
          <con:value>4278c06d09faa0e84e</con:value>
        </con:property>
        <con:property>
          <con:name>t_existingCustomerFlag</con:name>
          <con:value>TRUE</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=45ade4018b34fc5cc4073b81933b</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie2</con:name>
          <con:value>JSESSIONID=45ad6801d41e3c7f09d7aaa51e21</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008983</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID2</con:name>
          <con:value>1008984</con:value>
        </con:property>
        <con:property>
          <con:name>t_existingCustomerFlag2</con:name>
          <con:value>TRUE</con:value>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value>on</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>8e9ece2c-fbfc-44b6-b324-cd46439d749c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ac58221e-30df-41af-af69-a389026fbdd6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>76209053-f256-44a2-99c8-131e116b4ddf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5438e424-8265-4766-85d8-6e9d1d965d88</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e74a3212-d010-4be5-9f09-7b24e13c88a2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>682853fe-3bdf-4867-92df-d9b5837297e6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Existing Customer Re-registers New Handset (iPhone)" searchProperties="true" id="f79f898d-3f05-449d-939c-3a83afc3fd6b">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="86c3e4e0-749a-4f04-9c49-84385732fd89">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Selecting MSISDN " + newMsisdn + " to register...."

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register on First Handset" id="8180f5dc-75a2-4582-a0d7-e2a8e339ee79">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba0f39a14474796b5f920be54e6a</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008373</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>f2634a884ba6114d4b</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save First Registration Details" id="33c99e73-4ccc-44dc-bc6e-1a0f6b314dbe">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register on First Handset")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff First Handset" id="c0cc6de7-d204-471a-8bdf-8cb2418a89d4">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Verify New Handset" id="cf70ef78-d503-41c0-bc37-dd57fdef2534">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba0fa9b57d6de067f8ab64f5babf</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008373</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>TRUE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>f2634a884ba6114d4b</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Existing Customer Flag" id="511dac4e-0581-4f22-943a-ee7910754d3d">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

registrationTestStep = context.testCase.getTestStepByName("Verify New Handset")

if ( registrationTestStep.getPropertyValue( "r_existingCustomerFlag" ) == "TRUE" ) {
	log.info "existingCustomerFlag is TRUE as expected. Proceeding with LOGIN as Existing Customer...."
} else {
	log.error "existingCustomerFlag is FALSE. TRUE was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon New Handset (using Original GUID)" id="73644ade-8fec-4e64-a26a-2faf40a70166">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba0fc6353b36a0c1fcbc8e488642</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="1323fb6a-f5f2-4abd-a6f5-100fff2da27a">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Logon New Handset (using Original GUID)")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "2") , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Prep Mptu Contact Data" id="ec409a4c-a6d1-4a62-97b0-cf2628140728">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

//setup msisdn
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", newMsisdn )

//setup alias name
tr = testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )

log.info ""
log.info "Generated MPTU Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.testSuite.getPropertyValue("v_mptuAliasMsisdn")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Customer Adds Mptu Contact" id="9dc014b9-0c7a-4d8a-b0f5-8187b8c399ea">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff New Handset" id="532d407a-3ecf-4302-9c50-135ad3524bad">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientType2</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237008903</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237005486</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Michael</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>f2634a884ba6114d4b</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID2</con:name>
          <con:value>272f6b4a3cde9507a1</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba0f39a14474796b5f920be54e6a</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie2</con:name>
          <con:value>JSESSIONID=ba0fc6353b36a0c1fcbc8e488642</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008373</con:value>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value>on</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>8e9ece2c-fbfc-44b6-b324-cd46439d749c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ac58221e-30df-41af-af69-a389026fbdd6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>76209053-f256-44a2-99c8-131e116b4ddf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5438e424-8265-4766-85d8-6e9d1d965d88</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e74a3212-d010-4be5-9f09-7b24e13c88a2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Existing Customer Re-registers New Handset (Android)" searchProperties="true" id="7ccdc75d-2a4b-42aa-a90e-69af52e97d7b">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="766b846e-8555-4038-bd0a-69f62a12d039">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Generate MSISDN
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
log.info "Selecting MSISDN " + newMsisdn + " to register...."
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )

// Generate DeviceIDs
// -----------------
log.info "Client 1 type set to : " + context.testCase.getPropertyValue("v_clientType").toUpperCase() + ". Client 2 type set to : " + context.testCase.getPropertyValue("v_clientType2").toUpperCase()
// FIRST HANDSET DeviceID
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateImei"].testSteps["generateImei"].run(testRunner, context)
def newDeviceID1 = context.imeiGenerator.getImei()
context.testCase.setPropertyValue("v_clientDeviceID", newDeviceID1 )
log.info "Setting Device 1 IMEI as: " + newDeviceID1

// SECOND HANDSET DeviceID
Thread.sleep(20) //pause a bit to ensure DeviceID is unique (from one generated above)
def newDeviceID2 = context.imeiGenerator.getImei()
context.testCase.setPropertyValue("v_clientDeviceID2", newDeviceID2 )
log.info "Setting Device 2 IMEI as: " + newDeviceID2</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register on First Handset" id="6ba94eca-e2a2-4c4d-a6cb-52e53ef23af7">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=45b8da47858630f4d8760fa17968</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008985</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>958dd2db8b8fb789b3</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save First Registration Details" id="30c370d0-ebdd-46ee-b118-0c0d5733d0ed">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register on First Handset")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff First Handset" id="74331a8f-da8c-4e75-8b54-1f6467f4bfdd">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Verify New Handset" id="cd66391c-7138-42f1-9a5d-cef5e2e70fb2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=45b932d1989bd563a13b83d31943</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008985</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>TRUE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>958dd2db8b8fb789b3</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Query Device Token Updated" id="53f671cd-46e4-45ca-b6bc-0daf058b1f36">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)

def customerID = context.testCase.getPropertyValue("t_customerID")

def customerIdentifierID = context.queryMaker.queryMsisdnCustomerIdentifier(customerID, context.databaseConnection )
def deviceToken = context.queryMaker.queryDeviceToken( customerIdentifierID, context.databaseConnection )

if ( deviceToken == context.testCase.getPropertyValue( "v_clientDeviceID2" ) ) {
	log.info "Device Token has been updated to New Handset, as expected."
} else {
	log.error "Device Token does not match that of New Handset. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Existing Customer Flag" id="4102d5f3-e464-4652-95ce-cc3149bf8582">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

registrationTestStep = context.testCase.getTestStepByName("Verify New Handset")

if ( registrationTestStep.getPropertyValue( "r_existingCustomerFlag" ) == "TRUE" ) {
	log.info "existingCustomerFlag is TRUE as expected. Proceeding with LOGIN as Existing Customer...."
} else {
	log.error "existingCustomerFlag is FALSE. TRUE was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon New Handset (using Original GUID)" id="1dee2f41-41e9-4b10-b077-d486a64e40b2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=45b94e41b7698852ac280ca34748</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="30d51220-e152-4da4-a130-6ceed9d46deb">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Logon New Handset (using Original GUID)")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "2") , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Prep Mptu Contact Data" id="b9b67c7a-deab-4d24-9ce4-54f2ce3f9833">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

//setup msisdn
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", newMsisdn )

//setup alias name
tr = testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )

log.info ""
log.info "Generated MPTU Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.testSuite.getPropertyValue("v_mptuAliasMsisdn")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Customer Adds Mptu Contact" id="b77ae98a-114f-440b-89d4-c944b154bf36">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logoff New Handset" id="d9cfb19a-d382-455a-9805-18400dccebce">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>Android</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientType2</con:name>
          <con:value>Android</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value>991360772435045</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID2</con:name>
          <con:value>991360772435077</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237007449</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237008720</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Cheryl</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>958dd2db8b8fb789b3</con:value>
        </con:property>
        <con:property>
          <con:name>t_existingCustomerFlag</con:name>
          <con:value>TRUE</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=45b8da47858630f4d8760fa17968</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie2</con:name>
          <con:value>JSESSIONID=45b94e41b7698852ac280ca34748</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008985</con:value>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value>off</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>8e9ece2c-fbfc-44b6-b324-cd46439d749c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ac58221e-30df-41af-af69-a389026fbdd6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>76209053-f256-44a2-99c8-131e116b4ddf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5438e424-8265-4766-85d8-6e9d1d965d88</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e74a3212-d010-4be5-9f09-7b24e13c88a2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Session Authentication Fails (Incorrect Passcode)" searchProperties="true" id="287a8318-03ef-469d-93e9-1f759b3fe8cc">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="b44ed1f9-31b7-481f-8209-c25c0b324a4f">
        <con:settings/>
        <con:config>
          <script>testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Setting up SCENARIO test data"
log.info "Random MSISDN " + newMsisdn + " generated"

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )

// Set incorrect Passcode
def passcode = context.testCase.getPropertyValue("v_consumerPasscode")
context.testCase.setPropertyValue("v_consumerPasscodeIncorrect", ((passcode.toInteger()+1).toString()) )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Handset Verification" id="b12b9f21-f642-41e2-91b3-328309eed254">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4ba691c743b9d0a2eb44771ece4d</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1009006</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>bb744416ec4a3c4463</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="6d8fd194-104f-4007-a1e3-70eff6e94aeb">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Handset Verification")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Set Passcode" id="723b22c7-4e6e-4ca6-bc00-653c8ad52cd1">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4f0ea742-e206-445d-b3fb-f7004b4ef764</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="f7f77228-8882-41b8-8c07-5589aeecf8f9">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon with Incorrect Passcode" id="04af3a6d-0ed1-47aa-a679-e8388690c534">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscodeIncorrect}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4ba6dcc1be74fb5129db35bf01f1</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value>1002</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check No Session Started" id="95b6a405-9c05-4a35-9817-673f4ae363a8">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Logon with Incorrect Passcode")

def expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCode")
def actualErrorCode = loginTestStep.getPropertyValue("r_errorCode")

log.info ""

if ( actualErrorCode == expectedErrorCode ) {
	log.info "Error code " + actualErrorCode + " encountered, as Expected."
} else {
	log.error "Error code " + actualErrorCode + " encountered. Error code " + expectedErrorCode + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Customer State" id="c6bb10de-825b-4a99-bd07-7d4de5a7501c">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Re-check state of customer after Failed Login
def customerID = context.testCase.getPropertyValue("t_customerID")
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer", ['customer_id','state'], ['customer_id':customerID])</script>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237005758</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscodeIncorrect</con:name>
          <con:value>147897</con:value>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCode</con:name>
          <con:value>1002</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>bb744416ec4a3c4463</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=4ba691c743b9d0a2eb44771ece4d</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1009006</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>2f288eac-7e0d-439b-b6c2-130e0be0222e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>190672fc-68ce-46d0-ad0c-2aa453d5da11</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Session Authentication Fails (Device Token Mismatch)" searchProperties="true" id="fc0081ea-fa85-46d0-8076-1abb223bf2ba">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="4d843b88-0ed2-46b7-805b-64b88a8c591e">
        <con:settings/>
        <con:config>
          <script>log.info "Setting up SCENARIO test data"

// Generate MSISDN
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Random MSISDN " + newMsisdn + " generated"

// Generate Device Token
log.info "Client type set to " + context.testCase.getPropertyValue("v_clientType").toUpperCase()
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateImei"].testSteps["generateImei"].run(testRunner, context)
def imei = context.imeiGenerator.getImei()
context.testCase.setPropertyValue("v_clientDeviceID", imei )
log.info "Setting IMEI: " + imei + " as Device Token"

// Set incorrect Device Token
def clientDeviceID = context.testCase.getPropertyValue("v_clientDeviceID")
context.testCase.setPropertyValue("v_clientDeviceIDIncorrect", ((clientDeviceID.toBigDecimal()+1).toString()) )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="46e9875e-e441-40ad-878e-6b1f56ebb5c8">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba11bbb142e0adc53133fd914a2a</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008376</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>af6fd43e010bc224a2</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="80f4add2-e6ab-4ff4-a1c6-9e98ac75ed4d">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Ping" id="37a6a63d-3725-4672-8b43-50f39e906630">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>31537902-74d0-4451-9bf9-4c260dcb2f56</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="03912d63-7af1-428a-86f3-03e7322d4942">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon with Incorrect Device Token" id="853917c7-62af-49e9-9eab-d6d2b4731224">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceIDIncorrect}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba121bd35b8d50228307e4123f1f</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value>1005</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check No Session Started" id="154e5468-98d0-4f9a-addc-f71a18e9459c">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Logon with Incorrect Device Token")

def expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCode")
def actualErrorCode = loginTestStep.getPropertyValue("r_errorCode")

log.info ""

if ( actualErrorCode == expectedErrorCode ) {
	log.info "Error code " + actualErrorCode + " encountered, as Expected."
} else {
	log.error "Error code " + actualErrorCode + " encountered. Error code " + expectedErrorCode + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Customer State" id="830cff79-76f8-48f1-b76f-615035c56d9f">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Log state of customer after Failed Login
def customerID = context.testCase.getPropertyValue("t_customerID")
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer", ['customer_id','state'], ['customer_id':customerID])</script>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>Android</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value>991360625998404</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceIDIncorrect</con:name>
          <con:value>991360625998405</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237009129</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCode</con:name>
          <con:value>1005</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>af6fd43e010bc224a2</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba11bbb142e0adc53133fd914a2a</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008376</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8a45efe0-44e4-441a-8fe7-c84e37b98ccf</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a5f5da8e-f595-402f-9ed6-535a54ff91a1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Session Authentication Fails (Customer Suspended)" searchProperties="true" id="7e255a1e-3415-4c1d-b1f4-73b4d7fc25ee">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="639feae2-5b76-40ae-9d54-326d8030b3ec">
        <con:settings/>
        <con:config>
          <script>testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Setting up SCENARIO test data"
log.info "Random MSISDN " + newMsisdn + " generated"

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Handset Verification" id="f373bf40-be35-42d3-bae2-b8e596dbef6e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba254837ae1200bff7803713dd6d</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008384</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>b012ad9e727c5da786</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="1a512215-5d44-4679-9874-c5dd1bc8defa">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Handset Verification")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Set Passcode" id="b8230231-ee1e-4876-bcc4-4682f72c8869">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4f0ea742-e206-445d-b3fb-f7004b4ef764</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="f5e32c34-4a54-45f2-bf7f-debd94190bab">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Suspend Customer" id="7747fedf-25b0-420d-90d8-679a4eaa762a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>610da82c-e65d-4399-9e84-031222346d06</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_consoleUsername</con:name>
              <con:value>admin</con:value>
            </con:property>
            <con:property>
              <con:name>v_consolePass</con:name>
              <con:value>password</con:value>
            </con:property>
            <con:property>
              <con:name>v_consoleLocale</con:name>
              <con:value>en</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_changeToState</con:name>
              <con:value>suspend</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon Suspended Customer" id="38e68e55-0968-4743-973d-5dc4e5a6db13">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscodeIncorrect}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba25f14a1ea1f0b3352c05c4a796</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value>1022</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check No Session Started" id="e97b964e-e3e9-4cb8-b67b-8da355b3be91">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Logon Suspended Customer")

def expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCode")
def actualErrorCode = loginTestStep.getPropertyValue("r_errorCode")

log.info ""

if ( actualErrorCode == expectedErrorCode ) {
	log.info "Error code " + actualErrorCode + " encountered, as Expected."
} else {
	log.error "Error code " + actualErrorCode + " encountered. Error code " + expectedErrorCode + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237009164</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscodeIncorrect</con:name>
          <con:value>147897</con:value>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCode</con:name>
          <con:value>1022</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>b012ad9e727c5da786</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba254837ae1200bff7803713dd6d</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008384</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>2f288eac-7e0d-439b-b6c2-130e0be0222e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>190672fc-68ce-46d0-ad0c-2aa453d5da11</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Session Authentication Fails (Customer Deleted)" searchProperties="true" id="1bbfc645-dfee-400c-b30d-454f28cadd7d">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="fd4d3f54-f4f4-48dd-a2a7-63626ad406f9">
        <con:settings/>
        <con:config>
          <script>testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Setting up SCENARIO test data"
log.info "Random MSISDN " + newMsisdn + " generated"

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Handset Verification" id="de915544-5c91-405d-ac2b-0ab7e93ca1ed">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba12b7d17e0e8350e3ebce6f36ca</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008378</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>ecef0c77f192a80967</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="ce958ca3-2179-4292-b887-816e49c2e01b">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Handset Verification")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Set Passcode" id="6d53928c-543d-4d11-ae07-a7fdf0413dbc">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4f0ea742-e206-445d-b3fb-f7004b4ef764</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="cfe5cfb3-4dee-48d1-ad98-a7bb60269f63">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Delete Customer" id="5feeb8b3-1660-4834-ba52-d897ffc90100">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>610da82c-e65d-4399-9e84-031222346d06</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_consoleUsername</con:name>
              <con:value>admin</con:value>
            </con:property>
            <con:property>
              <con:name>v_consolePass</con:name>
              <con:value>password</con:value>
            </con:property>
            <con:property>
              <con:name>v_consoleLocale</con:name>
              <con:value>en</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_changeToState</con:name>
              <con:value>cancel</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon Deleted Customer" id="13ce4783-6892-4cb7-8d83-f5215aee482e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscodeIncorrect}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba13c1fe038ae0ec352ad84bf96d</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value>1001</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>off</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check No Session Started" id="7095316c-cdd2-4304-aef8-dfec76828882">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Logon Deleted Customer")

def expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCode")
def actualErrorCode = loginTestStep.getPropertyValue("r_errorCode")

log.info ""

if ( actualErrorCode == expectedErrorCode ) {
	log.info "Error code " + actualErrorCode + " encountered, as Expected."
} else {
	log.error "Error code " + actualErrorCode + " encountered. Error code " + expectedErrorCode + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237006141</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscodeIncorrect</con:name>
          <con:value>147897</con:value>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCode</con:name>
          <con:value>1001</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>ecef0c77f192a80967</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba12b7d17e0e8350e3ebce6f36ca</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008378</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>2f288eac-7e0d-439b-b6c2-130e0be0222e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>190672fc-68ce-46d0-ad0c-2aa453d5da11</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Passcode Locked (Too many login attempts)" searchProperties="true" id="4088e8f1-4dbd-4f71-b03d-236cde850805">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="0946a63a-f368-41ce-bb46-0e9d2fafaf6a">
        <con:settings/>
        <con:config>
          <script>testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)

def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)

log.info "Setting up SCENARIO test data"
log.info "Random MSISDN " + newMsisdn + " generated"

context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )

// Set incorrect Passcode
def passcode = context.testCase.getPropertyValue("v_consumerPasscode")
context.testCase.setPropertyValue("v_consumerPasscodeIncorrect", ((passcode.toInteger()+1).toString()) )

// Initialise Logon attempt counter
context.logonAttemptCount = 0</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Handset Verification" id="1598b065-3ab1-4d6d-a215-e347638155e1">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba27f6f1d6fe5978d43e24a523b9</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008385</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>f529a27f2605a65b61</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="cd83dc2a-ba0e-429a-910e-9fb84d87e241">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Handset Verification")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Set Passcode" id="be945e17-f2d9-4470-b5e3-0e15631b1ac4">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4f0ea742-e206-445d-b3fb-f7004b4ef764</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="End Session" id="c8237e5f-d823-4e84-b8a5-26148432e4ef">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logon with Incorrect Passcode" id="61e2eca5-77cf-43c6-b538-8719229abf57">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscodeIncorrect}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba28da0b53a440628d41337b9a81</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value>1003</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Increment Failed Login Counter" id="26949adf-d8b2-4d5b-bcec-ab1d0cc439d2">
        <con:settings/>
        <con:config>
          <script>context.logonAttemptCount++</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Error Starting Session" id="14529ed9-dc58-4ca6-9dda-9cda8ea43b1e">
        <con:settings/>
        <con:config>
          <script>def expectedErrorCode
def numberLoginAttemptsToTry = context.testCase.getPropertyValue("v_numberLoginAttemptsToTry").toInteger()
def loginTestStep = context.testCase.getTestStepByName("Logon with Incorrect Passcode")

if ( context.logonAttemptCount >= numberLoginAttemptsToTry ) {
	expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCode")
} else {
	expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCodeInterim")
}

def actualErrorCode = loginTestStep.getPropertyValue("r_errorCode")

log.info ""

if ( actualErrorCode == expectedErrorCode ) {
	log.info "Error code " + actualErrorCode + " encountered, as Expected."
} else {
	log.error "Error code " + actualErrorCode + " encountered. Error code " + expectedErrorCode + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Repeat Failed Login" id="16fa32b1-703f-45da-8618-7ec99d46a60b">
        <con:settings/>
        <con:config>
          <script>numberLoginAttemptsToTry = context.testCase.getPropertyValue("v_numberLoginAttemptsToTry").toInteger()

if ( (context.logonAttemptCount) &lt; numberLoginAttemptsToTry ) {
	testRunner.gotoStepByName( "Logon with Incorrect Passcode" )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Customer State" id="2a273013-4bdb-4039-9667-739036ebee61">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Re-check state of customer after Failed Login
def customerID = context.testCase.getPropertyValue("t_customerID")
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)

if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)
def customerIdentifierID = context.queryMaker.queryMsisdnCustomerIdentifier(customerID, context.databaseConnection )

def openingMessage = "Final Customer state after Maximum failed login attempts:"
context.queryRecordsSingleTable.fullCustomerStatusLog(log, context, openingMessage, customerID, customerIdentifierID)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Attempt Logon with Correct Passcode" id="05b4ebbd-7d37-49fe-b8dd-73625f5b415a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba2901fa7a22f0d28b8071cd2468</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value>1003</con:value>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Session Error Persists" id="683c8d5e-e47f-4b62-8899-db0f86b576d4">
        <con:settings/>
        <con:config>
          <script>def loginTestStep = context.testCase.getTestStepByName("Logon with Incorrect Passcode")
def expectedErrorCode = context.testCase.getPropertyValue("v_expectedErrorCode")
def actualErrorCode = loginTestStep.getPropertyValue("r_errorCode")

log.info ""
log.info "Finally, checking result using Correct Passcode after Maximum Failed Passcode Attempts..."

if ( actualErrorCode == expectedErrorCode ) {
	log.info "Error code " + actualErrorCode + " encountered, as Expected."
} else {
	log.error "Error code " + actualErrorCode + " encountered. Error code " + expectedErrorCode + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237009641</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscodeIncorrect</con:name>
          <con:value>147897</con:value>
        </con:property>
        <con:property>
          <con:name>v_numberLoginAttemptsToTry</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCodeInterim</con:name>
          <con:value>1002</con:value>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCode</con:name>
          <con:value>1003</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>f529a27f2605a65b61</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba27f6f1d6fe5978d43e24a523b9</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008385</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>2f288eac-7e0d-439b-b6c2-130e0be0222e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>190672fc-68ce-46d0-ad0c-2aa453d5da11</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b7ca1fe2-c219-4b1d-a9d6-7e41be2bb5e1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>16fa32b1-703f-45da-8618-7ec99d46a60b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>14529ed9-dc58-4ca6-9dda-9cda8ea43b1e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>26949adf-d8b2-4d5b-bcec-ab1d0cc439d2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Contact Created" searchProperties="true" id="97935a0c-13e0-48db-8f57-98d0beb4aad4">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="a76e3710-3365-4786-ab4f-edad5eed46e6">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDN
// ---------------
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Selecting Customer MSISDN " + newMsisdn + " to register."

// Generate MPTU Contact
// ---------------------
// Setup Contact MSISDN
Thread.sleep(20) //pause a bit to ensure msisdn is unique (from one generated above)
def contactMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", contactMsisdn )

// Setup Contact NAME
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )
log.info "Selecting Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.getPropertyValue("v_mptuAliasMsisdn")

// Generate Customer PAN
// ---------------------
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO Customer ID..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="f2b6e3df-c029-4c60-8f0c-3ae193599efe">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4b5f5d43fe26d055e38949a7c723</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1009001</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>0933bc2cb1e8606ebd</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Registration Details" id="2540bf2d-7eca-4ed7-adc7-130124f882f1">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Registration Session" id="21e9b225-8ba6-4b93-9d49-ac3298180570">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login" id="7f89de7b-01c7-41db-8e22-f7ad987639ee">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4b5fb4e1904270ef2f2b9ddc0911</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="0103884d-7ba3-47ef-9449-f8d7313ca33d">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Mptu Contact" id="67423d30-c2ab-49b5-8436-b84324638a9e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value>201</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_errorCode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout" id="bb91cf60-d929-41a7-9caa-17249ee02f86">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237009882</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=4b5fb4e1904270ef2f2b9ddc0911</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1009001</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>0933bc2cb1e8606ebd</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237009913</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Karin</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81278873923718</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7747fedf-25b0-420d-90d8-679a4eaa762a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Contacts Retrieved" searchProperties="true" id="df79acbe-996b-4f0d-aade-064785b97894">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Initial Data" id="331b4a63-d7d6-45b6-bd74-9898a3bdc895">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDN
// ---------------
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Selecting Customer MSISDN " + newMsisdn + " to register."

// Generate MPTU Contact
// ---------------------
// Setup Contact MSISDN
Thread.sleep(20) //pause a bit to ensure msisdn is unique (from one generated above)
def contactMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", contactMsisdn )

// Setup Contact NAME
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )
log.info "Selecting Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.getPropertyValue("v_mptuAliasMsisdn")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="2d15e9d6-5db2-4f25-b857-b853c97531df">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=3e5b15e14e952241c51858f0990e</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008955</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>e3410a047ab3fcd72d</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Registration Details" id="ea399368-0676-41de-9732-4c0935153ab6">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Registration Session" id="f5a706ba-44b0-46f9-9a54-11441a8d1d09">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login" id="d47e885e-2796-4c5e-8898-9a90d119ab2d">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=3e5b7301a333445ff2c767d41733</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="58bf79b6-f153-4861-b8a8-9c79cedf6e65">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Mptu Contact" id="e36ce82a-2686-4719-af46-3b30658df857">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Setup Second Mptu Contact" id="75f60591-982b-4c54-9014-93fc428a425a">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MPTU Contact
// ---------------------
// Setup Contact MSISDN
def contactMsisdn2 = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn2", contactMsisdn2 )

// Setup Contact NAME
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName2", context.firstNameGenerator.getFirstName(locale) )
log.info ""
log.info "Selecting Second Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName2") + " and MSISDN " + context.testCase.getPropertyValue("v_mptuAliasMsisdn2")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Second Mptu Contact" id="d330ee5a-084d-436b-9035-7c8587248c11">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Retrieve Mptu Contacts" id="44a6aead-7a5c-4a8b-898f-bc7a2eceadd1">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>c8bcd788-5a17-42f3-8b10-6fd1e64a9a69</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
            </con:property>
            <con:property>
              <con:name>v_expectedGetAliasResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_mptuAliasCount</con:name>
              <con:value>2</con:value>
            </con:property>
            <con:property>
              <con:name>r_mptuAliasList</con:name>
              <con:value>[Kayla:85237005362, Norma:85237006610]</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_mptuAliasCount</con:entry>
            <con:entry>r_mptuAliasList</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Mptu Contacts Retrieved" id="06df1aea-67a3-467f-ac3a-f70c314c3008">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

def failures = []
retrievaMptuTestStep = context.testCase.getTestStepByName("Retrieve Mptu Contacts")

// We expect actual mptu-alias count to match the number that we added
def actualContactsCount = retrievaMptuTestStep.getPropertyValue("r_mptuAliasCount")
def expectedContactCount = context.testCase.getPropertyValue("v_mptuNumberAliasesAdded")

// Get all the mptu-aliases found
def mptuAliasList = retrievaMptuTestStep.getPropertyValue("r_mptuAliasList")
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DeserialiseMapFromString"].testSteps["deserialiseMapFromString"].run(testRunner, context)
def actualContactsFound = context.deserialiseMapFromString.getMap(mptuAliasList)
// Get all the names we added
def name1 = context.testCase.getPropertyValue("v_mptuAliasName")
def name2 = context.testCase.getPropertyValue("v_mptuAliasName2")

// Check Alias count
if ( !(expectedContactCount == actualContactsCount) ) {
	failures.add( "Validation failure, " + retrievaMptuTestStep.name + ". Number of MPTU Aliases found " + actualContactsCount + " does not match expected count of: " + expectedContactCount )
}
// Check Aliases found include the expected Contact Names we added
if ( !( actualContactsFound.containsKey(name1) &amp;&amp; actualContactsFound.containsKey(name2) ) ) {
	failures.add( "Validation failure, " + retrievaMptuTestStep.name + ". MPTU Alias Names found " + actualContactsFound.keySet() + " does not match expected: [" + name1 + ", " + name2 + ']' )
} else {
	log.info "All the Aliases added have been found in retrieved mptu list, as Expected."
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout" id="61d97b2f-8dbf-41f3-ab2d-e58a6e582a78">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237005331</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237005362</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Kayla</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn2</con:name>
          <con:value>85237006610</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName2</con:name>
          <con:value>Norma</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuNumberAliasesAdded</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81276183741943</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=3e5b7301a333445ff2c767d41733</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008955</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>e3410a047ab3fcd72d</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7747fedf-25b0-420d-90d8-679a4eaa762a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>06df1aea-67a3-467f-ac3a-f70c314c3008</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Contact Deleted" searchProperties="true" id="45c636e9-1635-41ff-8077-1fb90c7f2849">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="38abae55-9cf8-40f7-b0e9-9c8a5c4021bf">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDN
// ---------------
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Selecting Customer MSISDN " + newMsisdn + " to register."

// Generate MPTU Contact
// ---------------------
// Setup Contact MSISDN
Thread.sleep(20) //pause a bit to ensure msisdn is unique (from one generated above)
def contactMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", contactMsisdn )

// Setup Contact NAME
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )
log.info "Selecting Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.getPropertyValue("v_mptuAliasMsisdn")

// Generate Customer PAN
// ---------------------
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO Customer ID..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="06b574ed-54f5-41ff-82f7-07fb79b551fb">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=37ee4c7fefa940da8eb9a9b90553</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008850</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>d16fa6d03b3284f510</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Registration Details" id="8a175c3d-98ce-45ce-b0b6-78e9dcc6439b">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Registration Session" id="d2606746-40ac-4ded-ad30-4d38b726ffdb">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login" id="c19df84c-0920-4777-aa0f-fed5f2490b09">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=37ee9571a4a7a8ad7df5176e1fef</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="8936ae09-b0b8-4e5f-a616-cf9970e69997">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Mptu Contact" id="837a18a2-45ed-4625-9544-78a88e63e96e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Remove Mptu Contact" id="06a25af5-a27d-48ac-a599-1c40a6a0b9e4">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>44b50390-3a5c-4ac9-bf0f-dcb513beff21</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedErrorCodeAfterDeletion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout" id="e0986954-6479-46c5-87de-6edc9c89be5b">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237006876</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=37ee9571a4a7a8ad7df5176e1fef</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008850</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>d16fa6d03b3284f510</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237006900</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Margarita</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81271272159458</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7747fedf-25b0-420d-90d8-679a4eaa762a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Bank Account Added" searchProperties="true" id="bf02e4b5-fcd7-4b48-949b-dc119d83c153">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="8ab3d55b-607c-434c-88f7-8b2ed9dac493">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDN
// ---------------
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Selecting Customer MSISDN " + newMsisdn + " to register."

// Generate Customer PAN
// ---------------------
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO Customer ID..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="53f4de35-7895-495a-9b10-3d045eddeb25">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=376f8c314bc7e8fb075960cdabe5</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008847</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>be129fb0ac2df1d718</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value/>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Registration Details" id="7bc0eee2-62ad-4254-951a-ecb9ae2ce92f">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Registration Session" id="4a78cb6d-7798-44bb-b189-a36493e9c053">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login" id="2313e10f-49f9-4ad5-a1be-93dcd3bd47aa">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=376fd44144ffcb611dea304be9c1</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="129cc9d8-0b9b-4808-9651-42e43ad80cfb">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Bank Account" id="9d690f2a-903e-4a1f-87b6-4936ae095d4c">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6674afe3-ad8d-4a57-84bf-b1d21d3c17d1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#t_customerPAN}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerRID</con:name>
              <con:value>0631309429</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_customerRID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check RID State" id="53928c0b-d6c4-49c5-ae07-b75d806fbadf">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

addAccountTestStep = context.testCase.getTestStepByName("Add Bank Account")
def customerRID = addAccountTestStep.getPropertyValue("r_customerRID")
def expectedRIDStatus = 'DELETED' // state 3

testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)
def RIDCustomerIdentifier = context.queryMaker.queryRIDCustomerIdentifier(customerRID, context.databaseConnection)
def actualRIDStatus = context.queryMaker.queryCustomerIdentifierStatus(RIDCustomerIdentifier, context.databaseConnection)

if ( actualRIDStatus == expectedRIDStatus ) {
	log.info "RID status " + actualRIDStatus + " encountered, as Expected."
} else {
	log.error "RID status " + actualRIDStatus + " encountered. RID status " + expectedRIDStatus + " was expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout" id="bcb45257-6bb7-480b-b212-319ccd5a9a81">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237007300</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=376fd44144ffcb611dea304be9c1</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008847</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>be129fb0ac2df1d718</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81279716117616</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAmount</con:name>
          <con:value>50</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7747fedf-25b0-420d-90d8-679a4eaa762a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Bank Account Replaced" searchProperties="true" id="7bc02c68-d029-41f5-9205-bd32a4f3a6b8">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="97e9ff90-21fc-4808-ad25-9a2f0d5a36bf">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDN
// ---------------
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Selecting Customer MSISDN " + newMsisdn + " to register."

// Generate Customer PAN
// ---------------------
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO Customer ID..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="6d3d425d-2bdb-40d1-9be9-49217f56922d">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ff04d63e64da907eaa693dfe9f67</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008761</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>4111d98a149517875e</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Registration Details" id="b464c7df-2e5d-4627-85e7-90365d8ba97c">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Registration Session" id="4d4a92c2-be19-4c8a-99a1-eef3253574bc">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login" id="e411ebd2-547d-4319-8b85-56a2aac11635">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ff051dd11c4e1e2ce9e631b14e43</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="ff06a1b4-e11b-404e-aaa5-81bbdbfc823e">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Bank Account" id="d381c769-4f11-4cc7-b64b-3955b06b8dcf">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6674afe3-ad8d-4a57-84bf-b1d21d3c17d1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#t_customerPAN}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerRID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout" id="003bd104-9cc4-4a9b-a9c5-95b205938c23">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="PAUSE" id="fd11c49c-4631-451f-889d-477c23986d44">
        <con:settings/>
        <con:config>
          <delay>5000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Setup Second PAN" id="83d71158-2e37-4927-ab76-d1960452a639">
        <con:settings/>
        <con:config>
          <script>// Generate Customer PAN
// ---------------------
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN2", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO Customer ID for Replacement Account..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login Again" id="c15f09af-93d8-4054-b076-6dbf15f00dda">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ff083ee870a580d7184274a33b28</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session Again" id="e887c44e-cf57-46a1-92cc-e619b71f63a2">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login Again")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Replace Bank Account" id="2d291d5e-e293-40f0-91e6-27da4749c920">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>64716241-7224-4ded-a24e-12d3eb39fc83</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#t_customerPAN2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Again" id="ec7c455c-f230-4642-b484-74a71847917d">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237008234</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ff083ee870a580d7184274a33b28</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008761</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>4111d98a149517875e</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81271885423922</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN2</con:name>
          <con:value>81271544576186</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7747fedf-25b0-420d-90d8-679a4eaa762a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Topup Success" searchProperties="true" id="d0623eb7-750d-46d3-b876-a86978a6b0c8">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="9806ad1e-6efc-417a-8e2f-af4d3b133167">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDN
// ---------------
def newMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn )
log.info "Selecting Customer MSISDN " + newMsisdn + " to register."

// Generate MPTU Contact
// ---------------------
// Setup Contact MSISDN
Thread.sleep(20) //pause a bit to ensure msisdn is unique (from one generated above)
def contactMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", contactMsisdn )

// Setup Contact NAME
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )
log.info "Selecting Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.getPropertyValue("v_mptuAliasMsisdn")

// Generate Customer PAN
// ---------------------
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO Customer ID..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Customer" id="fd918e9c-072b-46ea-8daf-9e31efeb8bd7">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4d06403176eda64bbd27a617d9fd</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1014262</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>8727582ab5398535ed</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Registration Details" id="c6a3a329-8c50-4389-a6e9-dec53d458a1d">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Registration Session" id="a58510cd-7735-4335-8189-7eca37249cfa">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Login" id="72e18d07-c319-411f-9cd9-7e4ddf4b9f0a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#t_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedSessionResponseCode</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=4d06d577afc77059321f962ca4ca</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedFlag</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_TncAcceptedVersion</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_numOfAccounts</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Session" id="aff14751-7ad7-4c97-b978-5e705f06d8e0">
        <con:settings/>
        <con:config>
          <script>loginTestStep = context.testCase.getTestStepByName("Login")

["r_sessionCookie"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , loginTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Bank Account" id="ba5ef1c0-43b9-4a2b-bce3-1f80f4366150">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6674afe3-ad8d-4a57-84bf-b1d21d3c17d1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#t_customerPAN}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerRID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Mptu Contact" id="cf833609-ad76-404f-ae5a-ab6ab7e165f3">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Make Mptu Payment" id="6b534a03-ffe0-4246-9dae-b86183455108">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1c994073-6c42-4137-a678-26b0e8d5097a</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_carrier</con:name>
              <con:value>${#Project#p_carrier}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAmount</con:name>
              <con:value>${#TestCase#v_mptuAmount}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>t_transactionId</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_promotionApplied</con:name>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout" id="510b5fc5-e1d6-4931-a5eb-c9fa8de696ee">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237005861</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=4d06d577afc77059321f962ca4ca</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1014262</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>8727582ab5398535ed</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81272763312468</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237005885</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Wade</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAmount</con:name>
          <con:value>50</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7747fedf-25b0-420d-90d8-679a4eaa762a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mptu Topup Contact Ineligible for Promo" searchProperties="true" id="784c3ae2-893a-444f-9596-53061bc647af">
      <con:settings/>
      <con:testStep type="groovy" name="Setup Data" id="af6a3d17-ce59-49a7-a1fd-02e134559b67">
        <con:settings/>
        <con:config>
          <script>// Initiate variables re-used in different data generation steps below
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateMsisdn"].testSteps["generateMsisdn"].run(testRunner, context)
def locale =  testRunner.testCase.testSuite.project.getPropertyValue("p_locale")

// Generate MSISDNs
// ----------------
// FIRST CUSTOMER
def newMsisdn1 = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn", newMsisdn1 )
log.info "Selecting First Customer MSISDN " + newMsisdn1 + " to register."
// SECOND CUSTOMER
Thread.sleep(20) //pause a bit to ensure msisdn is unique (from one generated above)
def newMsisdn2 = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_consumerMsisdn2", newMsisdn2 )
log.info "Selecting Second Customer MSISDN " + newMsisdn2 + " to register."

// Generate MPTU Contact
// ---------------------
// Setup Contact MSISDN
Thread.sleep(20) //pause a bit to ensure msisdn is unique (from one generated above)
def contactMsisdn = context.msisdnGenerator.getMsisdn(locale, context.databaseConnection)
context.testCase.setPropertyValue("v_mptuAliasMsisdn", contactMsisdn )

// Setup Contact NAME
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GenerateFirstName"].testSteps["generateFirstName"].run(testRunner, context)
context.testCase.setPropertyValue("v_mptuAliasName", context.firstNameGenerator.getFirstName(locale) )
log.info "Selecting Contact NAME " + context.testCase.getPropertyValue("v_mptuAliasName") + " and MSISDN " + context.testCase.getPropertyValue("v_mptuAliasMsisdn")

// Generate Customer PANs
// ----------------------
// FIRST CUSTOMER
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO ID for First Customer..."
// SECOND CUSTOMER
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["GeneratePan"].testSteps["generatePan"].run(testRunner, context)
context.testCase.setPropertyValue("t_customerPAN2", context.customerPan )
log.info "Selecting BANK ACCOUNT Number " + context.customerPan + " as JETCO ID for Second Customer..."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register First Customer" id="e8b5c123-bb46-4484-9684-f78a5f8650cd">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba1764e18a3682c3cb49b5cb500b</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008381</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>0765876c13be46c63a</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save First Registration Details" id="850b35dd-4f33-45a0-8961-bea472e9db3e">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register First Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Bank Account1" id="e0b22d91-daeb-4ed5-a16c-9aa3e26ec382">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6674afe3-ad8d-4a57-84bf-b1d21d3c17d1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#t_customerPAN}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerRID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Mptu Contact1" id="e9179ad9-cae2-4fd2-8a9e-32d8faf77d50">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Make Mptu Payment1" id="e7ec5727-feda-4dae-920d-ee8bac6694b2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1c994073-6c42-4137-a678-26b0e8d5097a</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_carrier</con:name>
              <con:value>${#Project#p_carrier}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAmount</con:name>
              <con:value>${#TestCase#v_mptuAmount}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>t_transactionId</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_promotionApplied</con:name>
              <con:value>Y</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_promotionApplied</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check First Mptu is Promotional" id="a4b8653e-447c-47b7-acb7-377a3d1a6419">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

def getTransactionTestStep = context.testCase.getTestStepByName("Make Mptu Payment1")
def expectedPromotionApplied = "Y"

["r_promotionApplied"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "1") , getTransactionTestStep.getPropertyValue( prop ) )
}

def actualPromotionApplied = context.testCase.getPropertyValue( "t_promotionApplied1" )

if ( actualPromotionApplied == expectedPromotionApplied ) {
	log.info "Promotion applied '" + actualPromotionApplied + "' on Mptu transaction as Expected."
} else {
	log.error "Promotion applied indicator was " + actualPromotionApplied + ". '" + expectedPromotionApplied + "' was Expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout First Customer" id="b3083058-30cd-489a-b50b-a839c982d63e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Register Second Customer" id="798e1ee5-b4ba-4c8c-a136-2ff8717306d3">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>82e3dac3-f9fd-4bd2-a850-e256165cd99f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value>JSESSIONID=ba19727c27d8d0fd82aaa69214b6</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value>1008382</con:value>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value>FALSE</con:value>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value>ca13533b03ed2dc92b</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save Second Registration Details" id="00a2bcd8-dcc7-4680-9c7a-628db3b8142d">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Register Second Customer")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "2") , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Bank Account2" id="5cb28d29-3ed5-4eb6-bdc4-a90537569b94">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6674afe3-ad8d-4a57-84bf-b1d21d3c17d1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#t_customerPAN2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID2}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_customerRID</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Add Mptu Contact1 (with SAME Beneficiary Msisdn)" id="eb733f5e-26cd-4165-ac3d-037cf382358a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>03538fde-ee3a-4278-b6dd-30d9d8cb262b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#t_customerID2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Make Mptu Payment2" id="428286de-cccb-4dc8-a870-7ae3b47f3afd">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1c994073-6c42-4137-a678-26b0e8d5097a</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>v_carrier</con:name>
              <con:value>${#Project#p_carrier}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAmount</con:name>
              <con:value>${#TestCase#v_mptuAmount}</con:value>
            </con:property>
            <con:property>
              <con:name>v_expectedResponseCode</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>t_transactionId</con:name>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
            <con:property>
              <con:name>r_promotionApplied</con:name>
              <con:value>E</con:value>
            </con:property>
            <con:property>
              <con:name>r_errorCode</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_promotionApplied</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Check Second Mptu is NOT Promotional" id="f142ea3b-38ff-4af4-9b84-0d30ef9c4606">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

def getTransactionTestStep = context.testCase.getTestStepByName("Make Mptu Payment2")
def expectedPromotionApplied = "E"

["r_promotionApplied"].each { prop ->
	context.testCase.setPropertyValue( ("t" + prop[1..prop.length()-1] + "2") , getTransactionTestStep.getPropertyValue( prop ) )
}

def actualPromotionApplied = context.testCase.getPropertyValue( "t_promotionApplied2" )

if ( actualPromotionApplied == expectedPromotionApplied ) {
	log.info "Promotion applied '" + actualPromotionApplied + "' on Mptu transaction as Expected."
} else {
	log.error "Promotion applied indicator was " + actualPromotionApplied + ". '" + expectedPromotionApplied + "' was Expected. Aborting test."
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Logout Second Customer" id="f9f87ed9-f1b6-4b1e-b1a7-93af63bdbbc0">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>1b59938e-04f3-4a92-984a-63eeaa698f2f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#t_sessionCookie2}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=testRunner.runContext.currentStep.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>//log start of TestCase
log.info " "
log.info "****** START TEST SCENARIO: " + context.testCase.name + "******"

//Open database connection
log.info "Opening database connection"
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
log.info ""
log.info "Closing database connection"
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value>iPhone</con:value>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value>1.0</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value>85237005552</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn2</con:name>
          <con:value>85237005591</con:value>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value>147896</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie</con:name>
          <con:value>JSESSIONID=ba1764e18a3682c3cb49b5cb500b</con:value>
        </con:property>
        <con:property>
          <con:name>t_sessionCookie2</con:name>
          <con:value>JSESSIONID=ba19727c27d8d0fd82aaa69214b6</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID</con:name>
          <con:value>1008381</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerID2</con:name>
          <con:value>1008382</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID</con:name>
          <con:value>0765876c13be46c63a</con:value>
        </con:property>
        <con:property>
          <con:name>t_handsetGUID2</con:name>
          <con:value>ca13533b03ed2dc92b</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN</con:name>
          <con:value>81278223126349</con:value>
        </con:property>
        <con:property>
          <con:name>t_customerPAN2</con:name>
          <con:value>81278655343368</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value>85237005669</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value>Bonnie</con:value>
        </con:property>
        <con:property>
          <con:name>v_mptuAmount</con:name>
          <con:value>50</con:value>
        </con:property>
        <con:property>
          <con:name>t_promotionApplied1</con:name>
          <con:value>Y</con:value>
        </con:property>
        <con:property>
          <con:name>t_promotionApplied2</con:name>
          <con:value>E</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>6b534a03-ffe0-4246-9dae-b86183455108</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>798e1ee5-b4ba-4c8c-a136-2ff8717306d3</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>00a2bcd8-dcc7-4680-9c7a-628db3b8142d</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b3083058-30cd-489a-b50b-a839c982d63e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f87ed9-f1b6-4b1e-b1a7-93af63bdbbc0</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e0b22d91-daeb-4ed5-a16c-9aa3e26ec382</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e9179ad9-cae2-4fd2-8a9e-32d8faf77d50</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e7ec5727-feda-4dae-920d-ee8bac6694b2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5cb28d29-3ed5-4eb6-bdc4-a90537569b94</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>eb733f5e-26cd-4165-ac3d-037cf382358a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>428286de-cccb-4dc8-a870-7ae3b47f3afd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a4b8653e-447c-47b7-acb7-377a3d1a6419</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f142ea3b-38ff-4af4-9b84-0d30ef9c4606</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1323fb6a-f5f2-4abd-a6f5-100fff2da27a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>53f671cd-46e4-45ca-b6bc-0daf058b1f36</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9bbe347-b20c-4df1-8f02-974faeb908c8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ef1463fd-3aba-4972-8f91-83477e334165</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bead99f7-551d-4195-9457-669646854b5e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>56e4a836-2f5a-4d49-b15d-f666af2071e6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>748737fc-cb01-4acb-821e-357309a4feff</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>06a25af5-a27d-48ac-a599-1c40a6a0b9e4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>75f60591-982b-4c54-9014-93fc428a425a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d330ee5a-084d-436b-9035-7c8587248c11</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>44a6aead-7a5c-4a8b-898f-bc7a2eceadd1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>2d291d5e-e293-40f0-91e6-27da4749c920</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>003bd104-9cc4-4a9b-a9c5-95b205938c23</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c15f09af-93d8-4054-b076-6dbf15f00dda</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e887c44e-cf57-46a1-92cc-e619b71f63a2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>83d71158-2e37-4927-ab76-d1960452a639</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:setupScript>//log start of TestSuite
log.info ""
log.info "***************************************************************"
log.info "****** START TEST SUITE: " + testSuite.name + "******"
log.info "***************************************************************"</con:setupScript>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="FEATURES" id="873040cf-857a-4e8a-bb78-1405abc96afa" disabled="true">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="-------------------------------Feature Group: AppLaunch" searchProperties="true" id="0944ecd5-bbfb-4fe8-bc19-b5ba579238be">
      <con:settings/>
      <con:testStep type="delay" name="PAUSE for RNT Processing" id="626cd12a-93a4-4fa7-a2b1-7e7bf8d33062">
        <con:settings/>
        <con:config>
          <delay>5000</delay>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="020 Launch (No Upgrade)" searchProperties="true" id="3fb1ec48-e22d-47f4-9f5d-b3d43ae2d8e1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_client-upgrade" id="b3693238-f764-4f75-ad7c-879e11c11e9b">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>687effe0-9fff-4349-bb41-1aa720f9531f</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value>{"path":"NO_UPGRADE"}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_appUpgradePath</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_client-upgrade" id="a92527bc-b6bf-40c6-bb3c-50a2097fd635">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []

def requestTestStep = context.testCase.getTestStepByName("GET_client-upgrade")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")
context.responseContent = requestTestStep.getPropertyValue("r_responseContent")

// Retrieve Path value from GET client/upgrade response
def actualAppUpgradePath
try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	actualAppUpgradePath = responseContentParsed.path
	log.info "Retrieved PATH from GET client/upgrade response: " + actualAppUpgradePath
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

// Define expected results
def expectedResponseStatus = '200'
def expectedAppUpgradePath = 'NO_UPGRADE'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}
// Check Actual Content against Expected
if (actualAppUpgradePath != expectedAppUpgradePath) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected Content " + expectedAppUpgradePath + ", but got: " + actualAppUpgradePath )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>21594699-f86b-4cca-ba71-7895ff643f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a45798bc-e080-40a5-9af6-6f049c1d7813</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="------------------------Feature Group: ConsumerRegister" searchProperties="true" id="e08c28f3-b807-4806-83b9-4cfb4d6cdc2f">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="100 Handset Verification" searchProperties="true" id="55f1efcc-19f5-467c-8acc-47c5911adf85">
      <con:settings/>
      <con:testStep type="groovy" name="SET conciseLogging" id="4b29d08c-abd3-4c62-b470-eee04b632ddb">
        <con:settings/>
        <con:config>
          <script>if ( (context.testCase.getPropertyValue("c_conciseLogging")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_conciseLogging") != "") ) {
	context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()
} else {
	context.concise = "off"
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="GET_activationCode" id="43a76572-d102-4335-8038-ba3f61bfcd70">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>ac0c79fc-d333-431c-8a31-5229096497ae</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseCookie</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${=context.concise}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseCookie</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_activationCode" id="1e150ccc-fd54-4dca-9c26-28f9c752c65b">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_activationCode")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

if (context.concise != "on") 	log.info "Activation Code Requested"
if (context.concise != "on") 	log.info ""

// Define expected results
def expectedResponseStatus = '204'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE sessionCookie" id="e52ecd0a-c857-42c0-82dc-825af9a7a200">
        <con:settings/>
        <con:config>
          <script>def responseCookie = context.testCase.getTestStepByName("GET_activationCode").getPropertyValue("r_responseCookie")
//log.info " responseCookie = " + responseCookie
re = /(JSESSIONID=[A-Za-z0-9]+)/
matcher = ( responseCookie =~ re )
def jsesid = matcher[0][0]

context.testCase.setPropertyValue("r_sessionCookie", jsesid)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY activationCode" id="89df9628-c54f-4f11-a670-46f0bee46af4">
        <con:settings/>
        <con:config>
          <script>// Open database connection if not found in current context (e.g. required to run this script directly - otherwise connection could have been opened in Test Suite Set-up script)
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

// Retrieve input parameters from relevant properties
def application = testRunner.testCase.testSuite.project.getPropertyValue("p_applicationName")
def msisdn = testRunner.testCase.getPropertyValue("v_consumerMsisdn")

// Instantiate Query Maker
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)

// Query the Customer ID
if (context.concise != "on") 	log.info "Getting Customer ID for MSISDN: $msisdn via Database Query"
def customer_id = context.queryMaker.queryCustomerId(application, msisdn, context.databaseConnection)
if (context.concise != "on") 	log.info "Getting Activation Code for CustomerID: $customer_id via Database Query"
def act_code = context.queryMaker.queryActivationCode(customer_id, context.databaseConnection)
if (context.concise != "on") 	log.info "Activation Code retrieved is " + act_code
if (context.concise != "on") 	log.info ""

// Store results
context.handsetActivationCode = act_code
context.testCase.setPropertyValue("r_customerID", customer_id)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="POST_activation" id="215779a3-7a4f-4d1c-8d93-5154ed19b5d7">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>10619b0b-076c-4589-b9fc-68cdd22ea739</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#r_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetActivationCode</con:name>
              <con:value>${=context.handsetActivationCode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value>{"error":{"errorCode":"4000","errorMsg":"Activation code cannot be empty,\nClient version cannot be empty,\nMSISDN cannot be empty,\nClient type cannot be empty,\n"}}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${=context.concise}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE POST_activation" id="4fa6d0f8-73e0-42f0-b3ee-ded8c6f4495c">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("POST_activation")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	if (context.concise != "on") log.info "Activation Code submitted to MEP"
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE existingCustomerFlag" id="6aa9f657-7ce7-4bab-82b4-f450ac7ded34">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve existingCustomerFlag value from POST activation response
def existingCustomerFlag
context.responseContent = context.testCase.getTestStepByName("POST_activation").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	existingCustomerFlag = responseContentParsed.activation.existingCustomer.toString().toUpperCase()
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if ( (existingCustomerFlag != "") &amp;&amp; (existingCustomerFlag != null) ) {
	context.testCase.setPropertyValue("r_existingCustomerFlag", existingCustomerFlag)
	log.info "Retrieved existingCustomerFlag from POST activation response: " + existingCustomerFlag
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE guid" id="5c1e166c-0cbd-40b4-8e18-a300ff979507">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve GUID value from POST activation response
def guid
context.responseContent = context.testCase.getTestStepByName("POST_activation").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	guid = responseContentParsed.activation.guid
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (guid != "") {
	context.testCase.setPropertyValue("r_handsetGUID", guid)
	log.info "Retrieved GUID from POST activation response: " + guid
	log.info ""
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Open database connection
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_existingCustomerFlag</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_handsetGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="115 Replace Handset Activation" searchProperties="true" id="e577c115-8b24-44cc-96f1-91b48812365d">
      <con:settings/>
      <con:testStep type="calltestcase" name="PUT_activation" id="616c26a8-4fc5-4d13-adca-68c7710f684e">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>da31234f-c070-4683-9092-4373b958c06e</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerGUID</con:name>
              <con:value>${#TestCase#v_previousHandsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE PUT_activation" id="2b941892-6e4f-4fe4-b4a5-a46cfa02645e">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("PUT_activation")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Replacement Activation successful"
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY new customerID" id="4407a68c-f150-4391-8c9a-e3654dadb55d">
        <con:settings/>
        <con:config>
          <script>// Open database connection if not found in current context (e.g. required to run this script directly - otherwise connection could have been opened in Test Suite Set-up script)
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

// Retrieve input parameters from relevant properties
def application = testRunner.testCase.testSuite.project.getPropertyValue("p_applicationName")
def msisdn = testRunner.testCase.getPropertyValue("v_consumerMsisdn")

// Instantiate Query Maker
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)

// Query the Customer ID
if (context.concise != "on") 	log.info "Querying Replacement Customer ID for MSISDN: $msisdn via Database Query"
def customer_id = context.queryMaker.queryCustomerId(application, msisdn, context.databaseConnection)
if (context.concise != "on") 	log.info ""

// Store results
context.testCase.setPropertyValue("r_customerID", customer_id)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE existingCustomerFlag" id="4b3f3304-d31f-4dc7-a09b-492adafc3bb3">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve existingCustomerFlag value from PUT activation response
def existingCustomerFlag
context.responseContent = context.testCase.getTestStepByName("PUT_activation").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	existingCustomerFlag = responseContentParsed.activation.existingCustomer.toString().toUpperCase()
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if ( (existingCustomerFlag != "") &amp;&amp; (existingCustomerFlag != null) ) {
	context.testCase.setPropertyValue("r_existingCustomerFlag", existingCustomerFlag)
	log.info "Retrieved existingCustomerFlag from PUT activation response: " + existingCustomerFlag
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE guid" id="3211ec4e-31be-4234-b333-b1bc8fb29abe">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve GUID value from POST activation response
def guid
context.responseContent = context.testCase.getTestStepByName("PUT_activation").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	guid = responseContentParsed.activation.guid
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (guid != "") {
	context.testCase.setPropertyValue("r_handsetGUID", guid)
	log.info "Retrieved New GUID from PUT activation response: " + guid
	log.info ""
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Open database connection
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_previousHandsetGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_handsetGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="119 Accept T&amp;C" searchProperties="true" id="bcd84785-d0a9-4a9c-b89f-9bcea7f35913">
      <con:settings/>
      <con:testStep type="calltestcase" name="PUT_Legal" id="28e94920-326e-4942-b8c7-3a82317fa1ba">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>7f9f2edd-3781-43c7-adf9-1211e9f4982d</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_appTncVersion</con:name>
              <con:value>${#TestCase#v_appTncVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_appTncAccepted</con:name>
              <con:value>${#TestCase#v_appTncAccept}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE PUT_Legal" id="4ca99e7e-3d4b-4cdf-b066-1d2fd9a83121">
        <con:settings/>
        <con:config>
          <script>def failures = []
def requestTestStep = context.testCase.getTestStepByName("PUT_Legal")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '204'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_appTncAccept</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_appTncVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>e644bbd7-4931-4907-b61d-edd09cd244eb</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9069ec0-a6bd-441f-8c87-19c4586e8655</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="120 Set Passcode" searchProperties="true" id="4f0ea742-e206-445d-b3fb-f7004b4ef764">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_RSAPublicKey" id="3caf4b89-87c7-47ad-a547-81d68d5fedd2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>b22a8425-74eb-46c5-9e46-99a5a495234b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>r_responseCookie</con:name>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
            <con:entry>r_serverKeyVersion</con:entry>
            <con:entry>r_handsetTWK</con:entry>
            <con:entry>r_handsetEncryptedPasscode</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_RSAPublicKey" id="c4a06793-12de-48ae-9ff9-5ff334885ba7">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_RSAPublicKey")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE passcodeEncryptionDetails" id="28ae2c12-10e9-46ee-b0fc-c31769a73ee8">
        <con:settings/>
        <con:config>
          <script>import devtools.PassCodeEncryptor
import groovy.json.JsonSlurper

// Retrieve required values from GET RSAPublicKey response
context.responseContent = context.testCase.getTestStepByName("GET_RSAPublicKey").getPropertyValue("r_responseContent")
try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	context.keyVersion = responseContentParsed.keyVersion
	context.modulus = responseContentParsed.modulus
	log.info "Extracted Public Key from GET RSAPublicKey response"
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (context.modulus != null) {
	// Encrypt passcode
	def passcode = context.testCase.getPropertyValue("v_consumerPasscode")
	def pcEncryptor = new PassCodeEncryptor()
	pcEncryptor.encryptPinAndTwk(context.modulus, passcode)
	// Store encrypted credential details in context
	context.handsetEncryptedPasscode = pcEncryptor.getEncryptedPasscode()
	context.handsetTWK = pcEncryptor.getEncryptedTwk()
	context.consumerPinLength = passcode.size().toString()
	log.info "Passcode " + passcode + " has been encrypted to " + context.handsetEncryptedPasscode
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="POST_security-credential" id="9baea3b4-60d7-4d87-b72b-1ffd35354480">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>73758992-3055-48b7-8162-a8a176728cca</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPinLength</con:name>
              <con:value>${=context.consumerPinLength}</con:value>
            </con:property>
            <con:property>
              <con:name>v_serverKeyVersion</con:name>
              <con:value>${=context.keyVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetTWK</con:name>
              <con:value>${=context.handsetTWK}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetEncryptedPasscode</con:name>
              <con:value>${=context.handsetEncryptedPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE POST_security-credential" id="642fd2c8-1d08-4135-ba4e-85b3da84f465">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("POST_security-credential")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '204'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	// Registration complete!
	log.info "Passcode credential successfully sent to MEP."
	log.info "REGISTRATION COMPLETE."
	// Log customer state
	def customerID = context.testCase.getPropertyValue("v_customerID")
	def openingMessage = "Customer end-state query results:"
	
	if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)
	def customerIdentifierID = context.queryMaker.queryMsisdnCustomerIdentifier(customerID, context.databaseConnection )

	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
	context.queryRecordsSingleTable.fullCustomerStatusLog(log, context, openingMessage, customerID, customerIdentifierID)
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value>on</con:value>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="125 Registration (Utility)" searchProperties="true" id="82e3dac3-f9fd-4bd2-a850-e256165cd99f">
      <con:settings/>
      <con:testStep type="calltestcase" name="Handset Verification" id="e644bbd7-4931-4907-b61d-edd09cd244eb">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>55f1efcc-19f5-467c-8acc-47c5911adf85</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_sessionCookie</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_customerID</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_existingCustomerFlag</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_handsetGUID</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=context.testCase.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_sessionCookie</con:entry>
            <con:entry>r_customerID</con:entry>
            <con:entry>r_existingCustomerFlag</con:entry>
            <con:entry>r_handsetGUID</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Save GUID &amp; Session" id="4956f7b4-030d-42d9-9cee-f5963554c11f">
        <con:settings/>
        <con:config>
          <script>registrationTestStep = context.testCase.getTestStepByName("Handset Verification")

["r_sessionCookie","r_customerID","r_handsetGUID"].each { prop ->
	context.testCase.setPropertyValue( ("r" + prop[1..prop.length()-1]) , registrationTestStep.getPropertyValue( prop ) )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="Set Passcode" id="c9069ec0-a6bd-441f-8c87-19c4586e8655">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4f0ea742-e206-445d-b3fb-f7004b4ef764</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#r_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPasscode</con:name>
              <con:value>${#TestCase#v_consumerPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#r_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
            <con:property>
              <con:name>c_callingTestName</con:name>
              <con:value>${=context.testCase.name}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_existingCustomerFlag</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_handsetGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>e644bbd7-4931-4907-b61d-edd09cd244eb</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9069ec0-a6bd-441f-8c87-19c4586e8655</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="------------------------------------Feature Group: Session" searchProperties="true" id="55d95f0e-aa7c-43d1-bbf7-bcb26935519e">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="200 Logon" searchProperties="true" id="8a13b7a4-efaf-4fae-95ff-7e38cd7e2c5c">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_RSAPublicKey" id="418716ef-72d6-4ecb-96a9-b01c28c2cfc2">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>b22a8425-74eb-46c5-9e46-99a5a495234b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>200</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value>{"modulus":"BAB0A6FCAFF6D4E84BDAAD46FA602D271D28DBCBDDE8F0FC58FD4540A932D71DC15AB2E9D6CA9B536CA00DCD61C1253E9071D1643ECFC94F5E662C9188AB7633EE5E3F26976DA255BEB8C5DBD3099CCA8F384628C8AF5E63D8516D356C7E0255B38ACF7CC376980CC903720FFEB5F4FF03647FF932D18422738D460854E15129","exponent":"3","keyVersion":"0854E15129"}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseCookie</con:name>
              <con:value>JSESSIONID=480b07714628022045fdb6fc7224; Path=/mrs</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>on</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
            <con:entry>r_responseCookie</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_RSAPublicKey" id="437782ad-564e-4258-b06a-72388334d486">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_RSAPublicKey")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE sessionCookie" id="fda32294-6bd0-4dfa-8737-d131db12006f">
        <con:settings/>
        <con:config>
          <script>def responseCookie = context.testCase.getTestStepByName("GET_RSAPublicKey").getPropertyValue("r_responseCookie")
//log.info " responseCookie = " + responseCookie
re = /(JSESSIONID=[A-Za-z0-9]+)/
matcher = ( responseCookie =~ re )
def jsesid = matcher[0][0]

context.testCase.setPropertyValue("r_sessionCookie", jsesid)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE passcodeEncryptionDetails" id="ba037d6d-c50c-4d61-b913-9c96c53133ae">
        <con:settings/>
        <con:config>
          <script>import devtools.PassCodeEncryptor
import groovy.json.JsonSlurper

// Retrieve required values from GET RSAPublicKey response
context.responseContent = context.testCase.getTestStepByName("GET_RSAPublicKey").getPropertyValue("r_responseContent")
try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	context.keyVersion = responseContentParsed.keyVersion
	context.modulus = responseContentParsed.modulus
	log.info "Extracted Public Key from GET RSAPublicKey response"
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (context.modulus != null) {
	// Encrypt passcode
	def passcode = context.testCase.getPropertyValue("v_consumerPasscode")
	def pcEncryptor = new PassCodeEncryptor()
	pcEncryptor.encryptPinAndTwk(context.modulus, passcode)
	// Store encrypted credential details in context
	context.handsetEncryptedPasscode = pcEncryptor.getEncryptedPasscode()
	context.handsetTWK = pcEncryptor.getEncryptedTwk()
	context.consumerPinLength = passcode.size().toString()
	log.info "Passcode " + passcode + " has been encrypted to " + context.handsetEncryptedPasscode
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="POST_session" id="5c552b2b-3b0c-480c-b679-8949b63f7f97">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>ddba2717-2071-4ab2-9116-ebfbb5bb1295</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_clientType</con:name>
              <con:value>${#TestCase#v_clientType}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientVersion</con:name>
              <con:value>${#TestCase#v_clientVersion}</con:value>
            </con:property>
            <con:property>
              <con:name>v_clientDeviceID</con:name>
              <con:value>${#TestCase#v_clientDeviceID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetGUID</con:name>
              <con:value>${#TestCase#v_handsetGUID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetEncryptedPasscode</con:name>
              <con:value>${=context.handsetEncryptedPasscode}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerPinLength</con:name>
              <con:value>${=context.consumerPinLength}</con:value>
            </con:property>
            <con:property>
              <con:name>v_handsetTWK</con:name>
              <con:value>${=context.handsetTWK}</con:value>
            </con:property>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#r_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_responseCookie</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseCookie</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE POST_session" id="63b74ffb-bb09-437c-8c9d-75d4d504987b">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("POST_session")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = context.testCase.getPropertyValue("v_expectedSessionResponseCode")

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else if ( actualResponseStatus == '200' ) {
		log.info "Customer successfully logged in."
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE responseNotices" id="80914bed-40a3-478a-80ea-c259a279eff1">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

context.responseContent = context.testCase.getTestStepByName("POST_session").getPropertyValue("r_responseContent")

// Retrieve Session response content if not Error response
try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	if (responseContentParsed.error == null){
		
		tncAcceptedFlag = responseContentParsed.session.termsAndConditions.accepted.toString()
		tncAcceptedVersion = responseContentParsed.session.termsAndConditions.version.toString()
		numOfAccounts = responseContentParsed.session.numOfAccounts.toString()

		context.testCase.setPropertyValue("r_tncAcceptedFlag",tncAcceptedFlag)
		context.testCase.setPropertyValue("r_tncAcceptedVersion",tncAcceptedVersion)
		context.testCase.setPropertyValue("r_numOfAccounts",numOfAccounts)
	}
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE errorCode" id="e96f9996-3174-42a3-9574-272deaebd1db">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve Error code (if encountered) from POST session response
def errorCode
context.responseContent = context.testCase.getTestStepByName("POST_session").getPropertyValue("r_responseContent")

try
{
	if (context.responseContent != null) {
		responseContentParsed = new JsonSlurper().parseText( context.responseContent )
		if (responseContentParsed.error != null) {
			errorCode = responseContentParsed.error.errorCode
		}
	}
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (errorCode != "") {
	context.testCase.setPropertyValue("r_errorCode", errorCode)
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerPasscode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_expectedSessionResponseCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_sessionCookie</con:name>
          <con:value>JSESSIONID=480b07714628022045fdb6fc7224</con:value>
        </con:property>
        <con:property>
          <con:name>r_errorCode</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>r_tncAcceptedFlag</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_tncAcceptedVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_numOfAccounts</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>80914bed-40a3-478a-80ea-c259a279eff1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="270 Logout" searchProperties="true" id="1b59938e-04f3-4a92-984a-63eeaa698f2f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="calltestcase" name="DELETE_session" id="8ad43258-2593-49d1-b735-b565f805a253">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>999a9e1a-27f9-4a55-977d-9d601a131547</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE DELETE_session" id="62f70c71-2a36-435a-97fb-6c8bc36bcef1">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []

def requestTestStep = context.testCase.getTestStepByName("DELETE_session")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '204'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failure
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Customer logged out."
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="---------------------Feature Group: Mptu SourceOfFunds" searchProperties="true" id="0ccae787-be21-4afd-a3d3-91a07b7f196a">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="300 Add Bank Account" searchProperties="true" id="6674afe3-ad8d-4a57-84bf-b1d21d3c17d1">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_customer-rid" id="0826e6db-c6bd-4761-96c6-07a1ea57eafe">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>3e7c882c-9a2e-486a-9d38-927e7c3a38ea</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_customer-rid" id="8ff7839d-1fb6-4753-8a0e-81655b27a64c">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_customer-rid")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

if (context.concise != "on") 	log.info "RID Requested"
if (context.concise != "on") 	log.info ""

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="RetrieveRID" id="e1d1e391-ac32-4b8b-9c6f-848a69d199b6">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def customerID = context.testCase.getPropertyValue("v_customerID")

// Retrieve RID value from GET customer-rid response
def rid
context.responseContent = context.testCase.getTestStepByName("GET_customer-rid").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	rid = responseContentParsed.rid.number
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (rid != "") {
	context.customerRID = rid
	context.testCase.setPropertyValue("r_customerRID",rid)
	log.info "Retrieved RID from GET customer-rid response: " + context.customerRID
	
	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
	context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer_identifier", ['customer_identifier_id','type','value','state'], ['customer_id':customerID,'value':context.customerRID,'type':"'RID'"])
	log.info ""
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="JETCO Sim Trigger RNT" id="1b83ffe8-7d19-417a-a625-a7c8878ee1a8">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>11584f2a-1351-437c-84b9-bb6f5573994b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_customerRID</con:name>
              <con:value>${=context.customerRID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#v_customerPAN}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY Customer Bank Account" id="dde65ce4-28f8-4125-b7fe-22a106222792">
        <con:settings/>
        <con:config>
          <script>//open database connection if not found in current context (required to run this script directly, otherwise connection is opened in Test Suite Set-up script)
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//instantiate Query maker object
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)

//query the number of bankcards
def bankcard_state = '2' //active
def customer_id = testRunner.testCase.getPropertyValue("v_customerID")
numOfActiveBankAccounts = context.queryMaker.countBankAccounts(bankcard_state, customer_id, context.databaseConnection)

// Check bankcard count
if ( numOfActiveBankAccounts != 1 ) {
	log.error "TEST FAILED. EXPECTED to find 1 Bank Account, but found " + numOfActiveBankAccounts
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Customer ID " + customer_id + " has " + numOfActiveBankAccounts + " *active* bank acount, as Expected."
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY RID Status after Account Added" id="5eeefdbc-d289-4c30-93e3-a3e34ecfc8b7">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def customerID = context.testCase.getPropertyValue("v_customerID")

if (context.customerRID != "") {
	log.info "Re-checking RID Status after Bank Account added: "
	
	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
	context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer_identifier", ['customer_identifier_id','type','value','state'], ['customer_id':customerID,'value':context.customerRID,'type':"'RID'"])
	log.info ""
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Open database connection
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerPAN</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_customerRID</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>0826e6db-c6bd-4761-96c6-07a1ea57eafe</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="315 Replace Bank Account" searchProperties="true" id="64716241-7224-4ded-a24e-12d3eb39fc83">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_customer-rid" id="94957353-d348-43a7-83ed-b6ecb56556a9">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>3e7c882c-9a2e-486a-9d38-927e7c3a38ea</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value>${#TestCase#c_conciseLogging}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_customer-rid" id="4c939b1a-f398-4294-8185-423a6f5d795e">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_customer-rid")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

if (context.concise != "on") 	log.info "RID Requested"
if (context.concise != "on") 	log.info ""

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="RetrieveRID" id="c3c09e9b-3389-454a-8907-399ef33c4ac2">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def customerID = context.testCase.getPropertyValue("v_customerID")

// Retrieve RID value from GET customer-rid response
def rid
context.responseContent = context.testCase.getTestStepByName("GET_customer-rid").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	rid = responseContentParsed.rid.number
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (rid != "") {
	context.customerRID = rid
	log.info "Retrieved RID from GET customer-rid response: " + context.customerRID
	
	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
	context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer_identifier", ['customer_identifier_id','type','value','state'], ['customer_id':customerID,'value':context.customerRID,'type':"'RID'"])
	log.info ""
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY Customer has One Active Bank Account" id="a5b6d92d-0d82-4169-b552-01f00c18b760">
        <con:settings/>
        <con:config>
          <script>//open database connection if not found in current context (required to run this script directly, otherwise connection is opened in Test Suite Set-up script)
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//instantiate Query maker object
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)

//query the number of Active bankcards
def bankcard_state = '2' //active
def customer_id = testRunner.testCase.getPropertyValue("v_customerID")
context.numOfActiveBankAccountsBeforeReplace = context.queryMaker.countBankAccounts(bankcard_state, customer_id, context.databaseConnection)
//query the number of Deleted bankcards
bankcard_state = '7' //deleted
context.numOfDeletedBankAccountsBeforeReplace = context.queryMaker.countBankAccounts(bankcard_state, customer_id, context.databaseConnection)

// Check bankcard count
if ( context.numOfActiveBankAccountsBeforeReplace != 1 ) {
	log.error "TEST FAILED. EXPECTED to find 1 Active Bank Account, but found " + context.numOfActiveBankAccountsBeforeReplace
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Customer ID " + customer_id + " has " + context.numOfActiveBankAccountsBeforeReplace + " *active* bank acount (before Account Replaced)"
	log.info "Customer ID " + customer_id + " has " + context.numOfDeletedBankAccountsBeforeReplace + " *deleted* bank acount (before Account Replaced)"
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="JETCO Sim Trigger RNT" id="e874e4d5-d281-4f0d-a576-b174885d2626">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>11584f2a-1351-437c-84b9-bb6f5573994b</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_customerRID</con:name>
              <con:value>${=context.customerRID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerPAN</con:name>
              <con:value>${#TestCase#v_customerPAN}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="WaitForRNTProcessing" id="5925c05d-a774-42e1-97e4-5b03eec1f19f">
        <con:settings/>
        <con:config>
          <delay>45000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY Check Bank Accounts after Replace" id="08058407-e2bb-4ec5-b815-b4e6ab3f774f">
        <con:settings/>
        <con:config>
          <script>//open database connection if not found in current context (required to run this script directly, otherwise connection is opened in Test Suite Set-up script)
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//instantiate Query maker object
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)

//query the number of Active bankcards
def bankcard_state = '2' //active
def customer_id = testRunner.testCase.getPropertyValue("v_customerID")
context.numOfActiveBankAccountsAfterReplace = context.queryMaker.countBankAccounts(bankcard_state, customer_id, context.databaseConnection)
//query the number of Deleted bankcards
bankcard_state = '7' //deleted
context.numOfDeletedBankAccountsAfterReplace = context.queryMaker.countBankAccounts(bankcard_state, customer_id, context.databaseConnection)

// Check Active bankcard count
if ( context.numOfActiveBankAccountsAfterReplace != 1 ) {
	log.error "TEST FAILED. EXPECTED to find 1 Active Bank Account, but found " + context.numOfActiveBankAccountsBeforeReplace
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Customer ID " + customer_id + " has " + context.numOfActiveBankAccountsBeforeReplace + " *active* bank acount (after Account Replaced)"
}

// Check Deleted bankcard count
if ( context.numOfDeletedBankAccountsAfterReplace != ( context.numOfDeletedBankAccountsBeforeReplace + 1 ) ) {
	log.error "TEST FAILED. EXPECTED to find " + ( context.numOfDeletedBankAccountsBeforeReplace + 1) + " Deleted Bank Accounts, but found " + context.numOfDeletedBankAccountsAfterReplace
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Customer ID " + customer_id + " has " + context.numOfDeletedBankAccountsAfterReplace + " *deleted* bank acount (after Account Replaced)"
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="QUERY RID Status after Account Replaced" id="de35759c-1a41-45cf-8719-bc835e7a1f66">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def customerID = context.testCase.getPropertyValue("v_customerID")

if (context.customerRID != "") {
	log.info "Re-checking RID Status after Bank Account replaced: "
	
	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
	context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer_identifier", ['customer_identifier_id','type','value','state'], ['customer_id':customerID,'value':context.customerRID,'type':"'RID'"])
	log.info ""
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Open database connection
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerPAN</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>0826e6db-c6bd-4761-96c6-07a1ea57eafe</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="----------------------------Feature Group: Mptu Contacts" searchProperties="true" id="743dd69f-0552-432a-aea0-ac1e6f6e513b">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="330 Add Mptu Contact" searchProperties="true" id="03538fde-ee3a-4278-b6dd-30d9d8cb262b">
      <con:settings/>
      <con:testStep type="calltestcase" name="POST_mptu-alias" id="ccdf8546-01fc-4a93-bfd5-59ba29e73622">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>e13b34c4-c2e7-49dd-8f40-551c3fb3d7fe</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasMsisdn</con:name>
              <con:value>${#TestCase#v_mptuAliasMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE POST_mptu-alias" id="5d7d2f3e-b842-4293-9ea2-782bbf822a9c">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("POST_mptu-alias")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = context.testCase.getPropertyValue("v_expectedResponseCode")

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else if (actualResponseStatus == '201') {
	// Registration complete!
	log.info "Mptu contact added by CustomerID " + context.testCase.getPropertyValue("v_customerID") + " for Contact : " + context.testCase.getPropertyValue("v_mptuAliasName") + "  " + context.testCase.getPropertyValue("v_mptuAliasMsisdn")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE errorCode" id="f07659ba-92c8-42ce-88d1-4fe82ada111c">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve Error code (if encountered) from POST session response
def errorCode
context.responseContent = context.testCase.getTestStepByName("POST_mptu-alias").getPropertyValue("r_responseContent")

try
{
	if (context.responseContent != null) {
		responseContentParsed = new JsonSlurper().parseText( context.responseContent )
		if (responseContentParsed.error != null) {
			errorCode = responseContentParsed.error.errorCode
		}
	}
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (errorCode != "") {
	context.testCase.setPropertyValue("r_errorCode", errorCode)
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_expectedResponseCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_errorCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="331 Remove Mptu Contact" searchProperties="true" id="44b50390-3a5c-4ac9-bf0f-dcb513beff21">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_mptu-alias Before Deletion" id="88834251-a422-4b8c-bcde-17e515b2057b">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6c7ec4e4-c26c-4730-acb4-66bb2781bd1c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE mptu-alias Found" id="13bf229a-5ed6-4c4a-92fc-053f2e1bc5e9">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve GET mptu-alias response
context.responseContent = context.testCase.getTestStepByName("GET_mptu-alias Before Deletion").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	context.mptuAliasNameFound = responseContentParsed.name
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_mptu-alias includes Alias" id="b470d49a-0175-4109-9468-1b642e8bc465">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_mptu-alias Before Deletion")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Check Alias to delete actually exists
def mptuAliasNameToDelete = context.testCase.getPropertyValue("v_mptuAliasName")
if ( !(mptuAliasNameToDelete == context.mptuAliasNameFound) ) {
	failures.add( "Validation failure, " + requestTestStep.name + ". MPTU Alias " + mptuAliasNameToDelete + " does not match Contact Name found: " + context.mptuAliasNameFound )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="DELETE_mptu-alias" id="0955f484-6874-4ac4-849e-952e612bed1a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>4411fe4b-17e4-499f-b4ff-6a263065f8e1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE DELETE_mptu-alias" id="7ebb7698-9398-440f-8711-7c180f6332d9">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("DELETE_mptu-alias")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '204'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	// Registration complete!
	log.info "Mptu contact deleted by CustomerID " + context.testCase.getPropertyValue("v_customerID") + " for Contact : " + context.testCase.getPropertyValue("v_mptuAliasName")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="GET_mptu-alias after Deletion" id="0e8e4011-0f74-47bb-b355-8901819e45d8">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6c7ec4e4-c26c-4730-acb4-66bb2781bd1c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE mptu-alias" id="5c955738-172d-4022-a427-200cde078c3e">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve GET mptu-alias response
context.responseContent = context.testCase.getTestStepByName("GET_mptu-alias after Deletion").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	context.mptuAliasNameFound = responseContentParsed.name
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_mptu-alias excludes Deleted" id="96cfe908-def9-49ce-bfe1-2f5ee93f7677">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_mptu-alias after Deletion")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// We expect mptu-alias to return error because alias is no longer found
def expectedResponseStatus = '400'
def expectedErrorCodeAfterDeletion = context.testCase.getPropertyValue("v_expectedErrorAfterDeletion")

// Check Actual HTTP Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Check Alias deleted no longer found
def mptuAliasNameToDelete = context.testCase.getPropertyValue("v_mptuAliasName")
if ( (mptuAliasNameToDelete == context.mptuAliasNameFound) ) {
	failures.add( "Validation failure, " + requestTestStep.name + ". MPTU Alias " + mptuAliasNameToDelete + " does not match Contact Name found: " + context.mptuAliasNameFound )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_expectedErrorCodeAfterDeletion</con:name>
          <con:value>3001</con:value>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="333 Retrieve Mptu Contacts" searchProperties="true" id="c8bcd788-5a17-42f3-8b10-6fd1e64a9a69">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_mptu-alias" id="302886d2-4e76-4b8b-b0b1-735eb7200953">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>6c7ec4e4-c26c-4730-acb4-66bb2781bd1c</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value/>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_mptu_alias" id="5c7a637e-35a2-42d4-a10b-7e9f8c7d2e43">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_mptu-alias")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedGetAliasResponseCode = context.testCase.getPropertyValue("v_expectedGetAliasResponseCode")

// Check Actual Status against Expected
if (actualResponseStatus != expectedGetAliasResponseCode) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else if ( actualResponseStatus == '200' ) {
		log.info "Mptu alias (Contacts) retrieved."
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE Mptu Contact Details" id="e2085305-f8e4-492f-a58f-1501055fa4da">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def mptuAliasList = [:]
context.responseContent = context.testCase.getTestStepByName("GET_mptu-alias").getPropertyValue("r_responseContent")

// Retrieve mptu alias response content if not Error response
try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	if (responseContentParsed.error[0] == null) {

		def mptuAliasCount = responseContentParsed.size().toString()

		responseContentParsed.each { contact ->
		mptuAliasList += [(contact.name):(contact.msisdn)]
		}

		context.testCase.setPropertyValue( "r_mptuAliasList" , mptuAliasList.toString() )
		context.testCase.setPropertyValue( "r_mptuAliasCount", mptuAliasCount )

		log.info "" + mptuAliasCount + " contacts found : " + mptuAliasList.toString()
	}
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE errorCode" id="92507d58-c72f-4ffb-bcb8-2d59f1613141">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve Error code (if encountered) from GET mptu-alias response
def errorCode = ""
context.responseContent = context.testCase.getTestStepByName("GET_mptu-alias").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	if (responseContentParsed.error != null) errorCode = responseContentParsed.error.errorCode.toString()
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (errorCode != "") {
	context.testCase.setPropertyValue("r_errorCode", errorCode)
}</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_expectedGetAliasResponseCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_errorCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_mptuAliasCount</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_mptuAliasList</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>e2085305-f8e4-492f-a58f-1501055fa4da</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="---------------------------Feature Group: Mptu Payments" searchProperties="true" id="8057a4f6-cae6-470c-9e3e-605c5fb39f92">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="350 Mptu Transaction" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1c994073-6c42-4137-a678-26b0e8d5097a">
      <con:settings/>
      <con:testStep type="calltestcase" name="GET_mptu-amount" id="ee71570e-b728-4970-9d5d-9e8e41644edb">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>18737325-68a1-4086-8de1-4e478f8b1d01</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_carrier</con:name>
              <con:value>${#TestCase#v_carrier}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value>400</con:value>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value>{"error":{"errorCode":"1020","errorMsg":"Session has timed out"}}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE mptu-amounts" id="b31dc41f-737d-4e3e-878c-5f49599cc179">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve valid mptu Amounts from GET mptu-amounts response
context.responseContent = context.testCase.getTestStepByName("GET_mptu-amount").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	context.mptuValidAmounts = responseContentParsed
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE GET_mptu-amount" id="3efe9173-542e-44f6-913c-bef7d9326753">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("GET_mptu-amount")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '200'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Check proposed Transaction amount is Valid (against configured MPTU amounts
def mptuAmount = context.testCase.getPropertyValue("v_mptuAmount")
def mptuValidAmounts = context.mptuValidAmounts.flatten()

if ( !(mptuAmount in mptuValidAmounts) ) {
	failures.add( "Validation failure, " + requestTestStep.name + ". MPTU Transaction Amount " + mptuAmount + " is not is list of accepted denominations: " + context.mptuValidAmounts )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="POST_mptu-transaction" id="e7266bed-f27f-4870-82ec-bd82fdcbe460">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>9d921699-45fc-4991-b50e-651c40705100</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAliasName</con:name>
              <con:value>${#TestCase#v_mptuAliasName}</con:value>
            </con:property>
            <con:property>
              <con:name>v_mptuAmount</con:name>
              <con:value>${#TestCase#v_mptuAmount}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_responseLocation</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
              <con:value/>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseLocation</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE POST_mptu-transaction" id="29dcfc34-9d18-4d06-8793-0bd77efcfcb9">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

def failures = []
def requestTestStep = context.testCase.getTestStepByName("POST_mptu-transaction")
def actualResponseStatus = requestTestStep.getPropertyValue("r_responseStatus")

// Define expected results
def expectedResponseStatus = '201'

// Check Actual Status against Expected
if (actualResponseStatus != expectedResponseStatus) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected HTTP Status " + expectedResponseStatus + ", but got: " + actualResponseStatus )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	// Registration complete!
	log.info "Topup successfully applied to Contact " + context.testCase.getPropertyValue("v_mptuAliasName") + " for amount " + context.testCase.testSuite.project.getPropertyValue("p_currency") + context.testCase.getPropertyValue("v_mptuAmount")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE errorCode" id="6c1b1f60-b90c-4bfa-a438-ecab203495d1">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve Error code (if encountered) from POST session response
def errorCode
context.responseContent = context.testCase.getTestStepByName("POST_mptu-transaction").getPropertyValue("r_responseContent")

try
{
	if (context.responseContent != null) {
		responseContentParsed = new JsonSlurper().parseText( context.responseContent )
		if (responseContentParsed.error != null) {
			errorCode = responseContentParsed.error.errorCode
		}
	}
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}

if (errorCode != "") {
	context.errorCode = errorCode
	context.testCase.setPropertyValue("r_errorCode", errorCode)
	testRunner.runTestStepByName( "CAPTURE errorCode")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE TransactionID" id="6fe10f43-7fcf-4267-9a35-9f0bfaf30aaa">
        <con:settings/>
        <con:config>
          <script>// Retrieve Location from POST mptu-transaction response
def location
context.responseLocation = context.testCase.getTestStepByName("POST_mptu-transaction").getPropertyValue("r_responseLocation")

//Extract Transaction ID
def transactionID = context.responseLocation.split('/')[-1]
context.testCase.setPropertyValue("t_transactionID", transactionID )

log.info "Saved transactionID " + transactionID + " from POST mptu-transaction Location header"</script>
        </con:config>
      </con:testStep>
      <con:testStep type="calltestcase" name="GET_mptu-transaction" id="e3cdcb56-b237-4733-926a-3bc868c3054a">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>669954ef-cea7-4d7e-8e17-2cf9d3d01ac1</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_sessionCookie</con:name>
              <con:value>${#TestCase#v_sessionCookie}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseStatus</con:name>
            </con:property>
            <con:property>
              <con:name>c_conciseLogging</con:name>
            </con:property>
            <con:property>
              <con:name>v_transactionID</con:name>
              <con:value>${#TestCase#t_transactionID}</con:value>
            </con:property>
            <con:property>
              <con:name>r_responseContent</con:name>
            </con:property>
          </con:properties>
          <con:returnProperties>
            <con:entry>r_responseStatus</con:entry>
            <con:entry>r_responseContent</con:entry>
          </con:returnProperties>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SAVE Promotional Status" id="d6e091c6-c8da-422f-8583-02818d3be009">
        <con:settings/>
        <con:config>
          <script>import groovy.json.JsonSlurper

// Retrieve Promotion Applied indicator from GET mptu-transaction response
context.responseContent = context.testCase.getTestStepByName("GET_mptu-transaction").getPropertyValue("r_responseContent")

try
{
	responseContentParsed = new JsonSlurper().parseText( context.responseContent )
	def promotionApplied = responseContentParsed.transaction.promotions.applied.toString()[1..-2]
	if (promotionApplied != null) {
		context.testCase.setPropertyValue( "r_promotionApplied", promotionApplied )
	}
} 
catch (Exception e) 
{
	log.error testRunner.runContext.currentStep.name + ": JSON parse exception: " + e
	testRunner.fail( testRunner.runContext.currentStep.name + " failed. JSON parse exception: " + e )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="CAPTURE errorCode" id="a6d427c1-9a23-42e3-b25e-53e304e3651d">
        <con:settings/>
        <con:config>
          <script>// Required as a target for SAVE error in event that txn request errors
if (context.errorCode != "") {
	log.info "Topup did not complete successfully. Skipped checking transaction details."
}</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_carrier</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAmount</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_expectedResponseCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>t_transactionID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_callingTestName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_promotionApplied</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_errorCode</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>d6e091c6-c8da-422f-8583-02818d3be009</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e3cdcb56-b237-4733-926a-3bc868c3054a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="----------------Feature Group: JetPay Consumer Console" searchProperties="true" id="1ff06776-04cb-4cf0-a6f8-6469e47e05be">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="745 Update Customer State" searchProperties="true" id="610da82c-e65d-4399-9e84-031222346d06">
      <con:settings/>
      <con:testStep type="calltestcase" name="Update Customer State" id="c9bbe347-b20c-4df1-8f02-974faeb908c8">
        <con:settings/>
        <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:targetTestCase>e32d10c8-bb77-4412-9684-76e8a3e91b00</con:targetTestCase>
          <con:properties>
            <con:property>
              <con:name>v_consoleUsername</con:name>
              <con:value>${#TestCase#v_consoleUsername}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consolePass</con:name>
              <con:value>${#TestCase#v_consolePass}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consoleLocale</con:name>
              <con:value>${#TestCase#v_consoleLocale}</con:value>
            </con:property>
            <con:property>
              <con:name>v_consumerMsisdn</con:name>
              <con:value>${#TestCase#v_consumerMsisdn}</con:value>
            </con:property>
            <con:property>
              <con:name>v_customerID</con:name>
              <con:value>${#TestCase#v_customerID}</con:value>
            </con:property>
            <con:property>
              <con:name>v_changeToState</con:name>
              <con:value>${#TestCase#v_changeToState}</con:value>
            </con:property>
          </con:properties>
          <con:returnProperties/>
          <con:runMode>PARALLELL</con:runMode>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="VALIDATE Updated Customer State" id="cfe83a32-c78c-407d-a718-789d8b57fc83">
        <con:settings/>
        <con:config>
          <script>def failures = []
def customerID = context.testCase.getPropertyValue("v_customerID")
def requestTestStep = context.testCase.getTestStepByName("Update Customer State")

// Define expected state
def changeToState = context.testCase.getPropertyValue("v_changeToState").toUpperCase()
switch (changeToState) {
	case 'SUSPEND':
		expectedCustomerState = 'SUSPENDED'
		break
	case 'CANCEL':
		expectedCustomerState = 'DELETED'
		break	
}

// Get actual state
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryMaker"].testSteps["QueryMaker"].run(testRunner, context)
def actualCustomerState = context.queryMaker.queryCustomerState(customerID, context.databaseConnection )

// Check Actual State against Expected
if (actualCustomerState != expectedCustomerState) {
	failures.add( "Validation failure, " + requestTestStep.name + ". Expected Customer Status " + expectedCustomerState + ", but got: " + actualCustomerState )
}

// Handle failures
if ( failures != [] ) {
	failures.each { failure -> log.error failure }
	testRunner.fail( context.testCase.name + " failed on " + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + " Step")
} else {
	log.info "Customer state verified as: " + actualCustomerState
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Log Updated Customer State" id="ef1463fd-3aba-4972-8f91-83477e334165">
        <con:settings/>
        <con:config>
          <script>log.info ""
log.info "****** DOING: " + testRunner.runContext.currentStep.name + " ******"

// Log full state of customer after Customer Suspend event
def customerID = context.testCase.getPropertyValue("v_customerID")
if (context.databaseConnection == null)	testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["QueryRecordSingleTable"].testSteps["queryRecordsSingleTable"].run(testRunner, context)
context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer", ['customer_id','state'], ['customer_id':customerID])</script>
        </con:config>
      </con:testStep>
      <con:setupScript>log.info " "
if ( (context.testCase.getPropertyValue("c_callingTestName")!= null) &amp;&amp; (context.testCase.getPropertyValue("c_callingTestName") != "") ) {
	log.info "****** DOING: " + context.testCase.getPropertyValue("c_callingTestName") + " (CALLING: " + context.testCase.name + ") ******"
} else {
	log.info "****** START TEST CASE: " + context.testCase.name + "******"
}

//Open database connection
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["DatabaseConnection"].testSteps["OpenDatabaseConnection"].run(testRunner, context)

//Clear all cookies (workaround SoapUI bug whereby Cookies are persisted between Test runs)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:tearDownScript>//Close database connection
context.databaseConnection.closeConnection(log)</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>v_consoleUsername</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consolePass</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consoleLocale</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_changeToState</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>28e94920-326e-4942-b8c7-3a82317fa1ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0955f484-6874-4ac4-849e-952e612bed1a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a5b6d92d-0d82-4169-b552-01f00c18b760</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="REQUESTS" id="897e8abf-0bb5-40ee-946e-ba9aabc662eb" disabled="true">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="--------------------Service: MATM-265-100.01 Activation" searchProperties="true" id="d6d4413f-408b-4c66-ab25-bf1a514fdbc3">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_activationCode" searchProperties="true" id="ac0c79fc-d333-431c-8a31-5229096497ae">
      <con:settings/>
      <con:testStep type="restrequest" name="GET_activationCode" id="5aa991aa-89e3-4f11-9fda-75590f503ab4">
        <con:settings/>
        <con:config service="Monitise Rest Service - Activation" resourcePath="/mrs/3/activationCode" methodName="Request Activation Code - requestActivationCode" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_activationCode" id="e4c743c7-4a86-4a73-ac84-d4fe42488cd8" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="msisdn" value="${#TestCase#v_consumerMsisdn}"/>
              <con:entry key="applicationName" value="${#Project#p_applicationName}"/>
              <con:entry key="issuerName" value="${#Project#p_applicationIssuer}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
              <con:entry key="clientVersion" value="${#TestCase#v_clientVersion}"/>
              <con:entry key="clientType" value="${#TestCase#v_clientType}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="54904319-a318-4407-bde2-40f8133d7606">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

//save results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseCookie",context.responseCookie)</script>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST_activation" searchProperties="true" id="10619b0b-076c-4589-b9fc-68cdd22ea739">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="9824bf22-55c2-4dd1-90e2-39a601d84089">
        <con:settings/>
        <con:config>
          <script>// Get project level data
def applicationIssuer = context.testCase.testSuite.project.getPropertyValue("p_applicationIssuer")
def applicationName = context.testCase.testSuite.project.getPropertyValue("p_applicationName")

// Get Test Case data
def clientType = context.testCase.getPropertyValue("v_clientType")
def clientVersion = context.testCase.getPropertyValue("v_clientVersion")
def consumerMsisdn = context.testCase.getPropertyValue("v_consumerMsisdn")
def handsetActivationCode = context.testCase.getPropertyValue("v_handsetActivationCode")

// Build the body
def PostActivationBody = """
{
	"issuerName":"$applicationIssuer",
	"activationCode":"$handsetActivationCode",
	"msisdn":"$consumerMsisdn",
	"clientType":"$clientType",
	"clientVersion":"$clientVersion",
"""

def clientDeviceID = context.testCase.getPropertyValue("v_clientDeviceID")
if ( clientDeviceID != "" ) {
	PostActivationBody = PostActivationBody + """	"deviceID":"$clientDeviceID",
	"""
}

PostActivationBody = PostActivationBody + """	"applicationName":"$applicationName"
}"""

context.PostActivationBody = PostActivationBody</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST_activation" id="4a66763d-8050-4824-8815-85dac03f3c59">
        <con:settings/>
        <con:config service="Monitise Rest Service - Activation" resourcePath="/mrs/3/activation" methodName="Request Activation - requestActivation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST_activation" id="d6bb8a9e-51ea-4e0d-8873-3ef6f4264144" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request>${=context.PostActivationBody}</con:request>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="f7875e6e-8891-48fd-8c6c-95c19f496984">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local properties
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetActivationCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT_activation" searchProperties="true" id="da31234f-c070-4683-9092-4373b958c06e">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="8f073e27-419a-4d38-b09a-eafa7f475546">
        <con:settings/>
        <con:config>
          <script>// Get Test Case data
def guid = context.testCase.getPropertyValue("v_consumerGUID")
def existingCustomerFlag = "false"

// Build the body
def PutActivationBody = ""
PutActivationBody += "{\n"
PutActivationBody += "	\"guid\":\"$guid\",\n"
PutActivationBody += "	\"existingCustomer\":\"$existingCustomerFlag\"\n"
PutActivationBody += "}"
//log.info PutActivationBody

context.PutActivationBody = PutActivationBody</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="PUT_activation" id="866e2405-a9cd-413b-9ee5-761658dfcff7">
        <con:settings/>
        <con:config service="Monitise Rest Service - Activation" resourcePath="/mrs/3/activation" methodName="Replace Activation - replaceActivation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PUT_activation" id="5fe70507-d77e-4f4d-a246-898a77bdadb4" mediaType="application/xml" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="9ce57e57-e1d1-4aad-bc83-ea088aff0ff3">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local properties
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="------------------------------MATM-265-100.05 Security" searchProperties="true" id="588a02cc-cac3-458d-8c98-8ffb5807c8b9">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_RSAPublicKey" searchProperties="true" id="b22a8425-74eb-46c5-9e46-99a5a495234b">
      <con:settings/>
      <con:testStep type="restrequest" name="GET_RSAPublicKey" id="1cade3ed-e093-47ad-aaf9-2863519b37a9">
        <con:settings/>
        <con:config service="Monitise Rest Service - Security" resourcePath="/mrs/3/security/RSAPublicKey" methodName="Get Security Key - getSecurityKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_RSAPublicKey" id="c5f7c566-91a4-402e-acc0-cd004533b4cf" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="67fdb31d-560f-44fa-8187-74434f35671e">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)
context.testCase.setPropertyValue("r_responseCookie",context.responseCookie)</script>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST_security-credential" searchProperties="true" id="73758992-3055-48b7-8162-a8a176728cca">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="6ef50b35-6a79-41ab-8f98-3ec7ed05ee11">
        <con:settings/>
        <con:config>
          <script>// Get Test Case data
def encryptedPasscode = context.testCase.getPropertyValue("v_handsetEncryptedPasscode")
def pinLength = context.testCase.getPropertyValue("v_consumerPinLength")
def keyVersion = context.testCase.getPropertyValue("v_serverKeyVersion")
def twk = context.testCase.getPropertyValue("v_handsetTWK")

// Build the body
def PostSecurityCredentialBody = ""
PostSecurityCredentialBody += "{\n"
PostSecurityCredentialBody += "	\"encryptedPasscode\":\"$encryptedPasscode\",\n"
PostSecurityCredentialBody += "	\"pinLength\":\"$pinLength\",\n"
PostSecurityCredentialBody += "	\"keyVersion\":\"$keyVersion\",\n"
PostSecurityCredentialBody += "	\"twk\":\"$twk\"\n"
PostSecurityCredentialBody += "}"

//log.info PostSecurityCredentialBody
context.PostSecurityCredentialBody = PostSecurityCredentialBody</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST_security-credential" id="62789227-011a-4a70-bf2d-9b2eda087a37">
        <con:settings/>
        <con:config service="Monitise Rest Service - Security" resourcePath="/mrs/3/security/credential" methodName="Add Credentials - addCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST_security-credential" id="b66f746d-bcd4-4a42-9e44-f1c35a803bf5" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request>${=context.PostSecurityCredentialBody}</con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="9ed0bd8d-562a-4328-a8e0-4e095a0321ed">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)</script>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerPinLength</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_serverKeyVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetTWK</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetEncryptedPasscode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST_session" searchProperties="true" id="ddba2717-2071-4ab2-9116-ebfbb5bb1295">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="74d7fc0e-034e-47b1-8c3b-d201beb39817">
        <con:settings/>
        <con:config>
          <script>// Get Test Case data
def issuerName = testRunner.testCase.testSuite.project.getPropertyValue("p_applicationIssuer")
def guid = context.testCase.getPropertyValue("v_handsetGUID")
def clientType = context.testCase.getPropertyValue("v_clientType")
def clientVersion = context.testCase.getPropertyValue("v_clientVersion")
def encryptedPasscode = context.testCase.getPropertyValue("v_handsetEncryptedPasscode")
def pinLength = context.testCase.getPropertyValue("v_consumerPinLength")
//def keyVersion = context.testCase.getPropertyValue("v_serverKeyVersion")
def twk = context.testCase.getPropertyValue("v_handsetTWK")

// Build the body
def PostSessionBody = """
{
	"issuerName":"$issuerName",
	"guid":"$guid",
	"clientType":"$clientType",
	"clientVersion":"$clientVersion",
	"passcode":"$encryptedPasscode",
	"pinLength":"$pinLength",
	"twk":"$twk",
"""

def clientDeviceID = context.testCase.getPropertyValue("v_clientDeviceID")
if ( clientDeviceID != "" ) {
	PostSessionBody = PostSessionBody + """	"deviceID":"$clientDeviceID",
	"""
}

PostSessionBody = PostSessionBody + """	"authenticationType\":\"passcode\"
}"""

context.PostSessionBody = PostSessionBody</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST_session" id="377bdaf5-2c34-48e0-b3f9-446225901c97">
        <con:settings/>
        <con:config service="Monitise Rest Service - Security" resourcePath="/mrs/3/security/session" methodName="Get Session - getSession" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST_session" id="758410fb-1d48-4409-8ca7-ba51d788d0ac" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request>${=context.PostSessionBody}</con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="fb888a48-7a42-4222-8d25-f63a22949d94">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseCookie",context.responseCookie)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientDeviceID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetGUID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetEncryptedPasscode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerPinLength</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_handsetTWK</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE_session" searchProperties="true" id="999a9e1a-27f9-4a55-977d-9d601a131547">
      <con:settings/>
      <con:testStep type="restrequest" name="DELETE_session" id="0543a21d-8518-4d9e-8bcb-5d7bc335d3ef">
        <con:settings/>
        <con:config service="Monitise Rest Service - Security" resourcePath="/mrs/3/security/session" methodName="Close Session - closeSession" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DELETE_session" id="ef13677c-98c0-4e53-b40b-e69bf1322785" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="fd1447cf-6cf5-447d-b6ee-55b49cecadcf">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="----------------------------MATM-265-100.08 Customer" searchProperties="true" id="b7fe48c0-b401-41eb-bd3f-ec15d13855b6">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_customer-rid" searchProperties="true" id="3e7c882c-9a2e-486a-9d38-927e7c3a38ea">
      <con:settings/>
      <con:testStep type="restrequest" name="GET_customer-rid" id="1ac3ec0c-ed38-4c36-a9b0-069b34fb0680">
        <con:settings/>
        <con:config service="Monitise Rest Service - Customer" resourcePath="/mrs/3/customer/rid" methodName="Get Customer Registration Identifier - getCustomerRegistrationIdentifier" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_customer-rid" id="ad6ed3f9-a40f-4090-ba63-8c7f9ff79a21" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="2ade507e-5cf9-461b-bfe1-dced84918e92">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="--------------------------------MATM-265-100.11 Mptu" searchProperties="true" id="e6c7ce5a-4666-4796-959f-e197fa0404cf">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST_mptu-alias" searchProperties="true" id="e13b34c4-c2e7-49dd-8f40-551c3fb3d7fe">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="5c7ad3b9-4248-470d-ae35-e333431991ec">
        <con:settings/>
        <con:config>
          <script>// Get Test Case data
def carrier = context.testCase.testSuite.project.getPropertyValue("p_carrier")
def mptuAliasName = context.testCase.getPropertyValue("v_mptuAliasName")
def mptuAliasMsisdn = context.testCase.getPropertyValue("v_mptuAliasMsisdn")

// Build the body
def PostMptuAlias = """
{
	"carrier\":\"$carrier\",
	"msisdn\":\"$mptuAliasMsisdn\",
	"name\":\"$mptuAliasName\"
}"""

context.PostMptuAlias = PostMptuAlias</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST_mptu-alias" id="43d12a46-a0e1-4fb8-8387-0ff19ffd85a1">
        <con:settings/>
        <con:config service="Monitise Rest Service - MPTU" resourcePath="/mrs/3/mptu/alias" methodName="Create MPTU Alias - createMPTUAlias" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST_mptu-alias" id="5badbff1-1356-4414-a508-0d5fdd802bb5" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request>${=context.PostMptuAlias}</con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="01d2c331-ac2e-4642-8ce0-7fce91bf8f17">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_mptu-alias" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6c7ec4e4-c26c-4730-acb4-66bb2781bd1c">
      <con:description>TestCase generated for REST Resource [Login the app] located at [/security/session]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="GET_mptu-alias" id="2430911f-9da9-4150-bb5f-17cc21d591a9">
        <con:settings/>
        <con:config service="Monitise Rest Service - MPTU" resourcePath="/mrs/3/mptu/alias/{aliasName}" methodName="Get MPTU Alias - getMPTUAlias" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_mptu-alias" id="4d4a5494-f153-4979-a2f1-be7b7b2bb57e" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="aliasName" value="${#TestCase#v_mptuAliasName}"/>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="3bb9e22d-a93c-416f-bbed-06d56e07c578">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

//save results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="DELETE mptu-alias" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4411fe4b-17e4-499f-b4ff-6a263065f8e1">
      <con:description>TestCase generated for REST Resource [Login the app] located at [/security/session]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="DELETE mptu-alias" id="3bc07b9f-1eed-46d8-a6d6-b1cc6934b9ab">
        <con:settings/>
        <con:config service="Monitise Rest Service - MPTU" resourcePath="/mrs/3/mptu/alias/{aliasName}" methodName="Delete MPTU Alias - deleteMPTUAlias" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DELETE mptu-alias" id="a1ab01ab-4ecd-497e-8351-8b235b445a5e" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="aliasName" value="${#TestCase#v_mptuAliasName}"/>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="11c1e258-31fa-41a0-87f8-ea382363a749">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

//save results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="GET_mptu-amount" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="18737325-68a1-4086-8de1-4e478f8b1d01">
      <con:description>TestCase generated for REST Resource [Login the app] located at [/security/session]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="GET_MPTUAmount" id="90406b62-8169-4bf6-a385-35761e380cc3">
        <con:settings/>
        <con:config service="Monitise Rest Service - MPTU" resourcePath="/mrs/3/mptu/carrier/amount" methodName="Get Carrier MPTU Pre-Defined Amounts - obtainMPTUAmount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_MPTUAmount" id="de956c47-e1fc-40e9-a3ed-d49f9b783fe8" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="carrier" value="${#TestCase#v_carrier}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="4a36191a-81d4-49c0-b429-22151b06a93c">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

//save results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_carrier</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST_mptu-transaction" searchProperties="true" id="9d921699-45fc-4991-b50e-651c40705100">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="4da9c09f-fb7d-43ac-9951-e5da0e4ce49c">
        <con:settings/>
        <con:config>
          <script>// Get Test Case data
def mptuAliasName = context.testCase.getPropertyValue("v_mptuAliasName")
def mptuAmount = context.testCase.getPropertyValue("v_mptuAmount")
def authToken = testRunner.testCase.testSuite.project.getPropertyValue("v_authToken")

// Build the body
def PostMptuTransactionBody = """
{
	"aliasName\":\"$mptuAliasName\",
	"amount\":\"$mptuAmount\",
	"authToken\":\"$authToken\"
}"""

context.PostMptuTransaction = PostMptuTransactionBody</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST_mptu-transaction" id="81917f44-22b0-4ac3-a2c3-ad5eb11b47d7">
        <con:settings/>
        <con:config service="Monitise Rest Service - MPTU" resourcePath="/mrs/3/mptu/transaction" methodName="Create MPTU Transaction - createMPTUTransaction" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST_mptu-transaction" id="79d716f6-fe04-4e8e-8eb1-61791da7a55a" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request>${=context.PostMptuTransaction}</con:request>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="965a33f8-5dd0-4ad2-a0ad-e1d1d10e7ea6">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseLocation",context.responseLocation)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAliasName</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_mptuAmount</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseLocation</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="GET_mptu-transaction" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="669954ef-cea7-4d7e-8e17-2cf9d3d01ac1">
      <con:description>TestCase generated for REST Resource [Login the app] located at [/security/session]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="GET_mptu-transaction" id="815a21e0-c332-47d1-bfd4-f671fed33d3d">
        <con:settings/>
        <con:config service="Monitise Rest Service - MPTU" resourcePath="/mrs/3/mptu/transaction/{transactionId}" methodName="Get MPTU Transaction - getTransaction" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_mptu-transaction" id="7f72d7cb-474c-4d0c-9f5d-48a85070aa83" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="transactionId" value="${#TestCase#v_transactionID}"/>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="cc27573b-6a8c-409a-8f32-d34f65c4c1e8">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

//save results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_transactionID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="---------------------------------MATM-265-100.14 Ping" searchProperties="true" id="bbc78f41-20c4-423e-832e-220eedee06bb">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_ping" searchProperties="true" id="31537902-74d0-4451-9bf9-4c260dcb2f56">
      <con:settings/>
      <con:testStep type="restrequest" name="GET_ping" id="7fa1a48c-5bb3-4914-bdea-f9cc3cc4d3ca">
        <con:settings/>
        <con:config service="Monitise Rest Service - Ping" resourcePath="/mrs/3/ping" methodName="Get Ping - getPing" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_ping" id="9c7df587-1343-4a66-81cd-1284d9511232" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="9fc41e76-ecfe-4725-a276-d2a1fed3a229">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="--------------------------------MATM-265-100.15 Client" searchProperties="true" id="d211c86a-c24b-463a-b5c9-0ff7a23437e0">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET_client-upgrade" searchProperties="true" id="687effe0-9fff-4349-bb41-1aa720f9531f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="restrequest" name="GET_client-upgrade" id="cec5d050-36db-4614-af2f-127ebf7ff9ec">
        <con:settings/>
        <con:config service="Monitise Rest Service - Client" resourcePath="/mrs/3/client/upgrade" methodName="Get Client Upgrade - getClientUpgrade" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_client-upgrade" id="ba66fb8b-4998-4370-9362-4bcae774fda4" mediaType="application/xml">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="applicationName" value="${#Project#p_applicationName}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
              <con:entry key="clientVersion" value="${#TestCase#v_clientVersion}"/>
              <con:entry key="clientType" value="${#TestCase#v_clientType}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="dd2277d6-59ce-42cf-91bf-e0d2b6e1a623">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)
context.testCase.setPropertyValue("r_responseContent",context.responseContent)</script>
        </con:config>
      </con:testStep>
      <con:setupScript/>
      <con:properties>
        <con:property>
          <con:name>v_clientType</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_clientVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>r_responseContent</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_conciseLogging</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>c8a6a7c9-4ffe-4c25-a821-4cc10389d40b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>43d12a46-a0e1-4fb8-8387-0ff19ffd85a1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8f073e27-419a-4d38-b09a-eafa7f475546</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>9ce57e57-e1d1-4aad-bc83-ea088aff0ff3</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="--------------------------------MATM-265-100.10 Legal" searchProperties="true" id="33c1e029-2125-4005-af50-d97560736dff">
      <con:settings/>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT_Legal" searchProperties="true" id="7f9f2edd-3781-43c7-adf9-1211e9f4982d">
      <con:settings/>
      <con:testStep type="groovy" name="BuildBody" id="130eadcf-9cfd-41e7-8d1e-d6e334e63142">
        <con:settings/>
        <con:config>
          <script>// Get Test Case data
def appTncVersion = context.testCase.getPropertyValue("v_appTncVersion")
def appTncAccepted = context.testCase.getPropertyValue("v_appTncAccepted")

// Build the body
def PutLegalBody = """
{
	"accepted\":\"$appTncAccepted\",
	"version\":\"$appTncVersion\"
}"""

context.PutLegalBody = PutLegalBody</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="PUT_Legal" id="4746d258-c872-481c-b5f5-6dbd919177c9">
        <con:settings/>
        <con:config service="Monitise Rest Service - Legal" resourcePath="/mrs/3/legal" methodName="Update Legal - updateLegal" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PUT_Legal" mediaType="application/json" postQueryString="false" id="0915714a-8876-4e23-bb54-0f96cc73db2a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request>${=context.PutLegalBody}</con:request>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="messageID" value="17897"/>
              <con:entry key="Cookie" value="${#TestCase#v_sessionCookie}"/>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogResults" id="fcdf9ad5-90e2-42c7-86ed-722732cf7f5b">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)
if (context.testCase.getPropertyValue("c_conciseLogging") != null) context.concise = context.testCase.getPropertyValue("c_conciseLogging").toLowerCase()

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

// Save HTTP response results into local property for upstream reference
context.testCase.setPropertyValue("r_responseStatus",context.responseStatus)</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_sessionCookie</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_appTncVersion</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_appTncAccepted</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>r_responseStatus</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="CONSOLE" disabled="true" id="31020c97-63de-460b-bf84-d6862090b700">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Console Update Customer State" searchProperties="true" id="e32d10c8-bb77-4412-9684-76e8a3e91b00" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="groovy" name="Log Event" id="f8d72c0a-82b6-4225-aa75-b83a7a8efaf9">
        <con:settings/>
        <con:config>
          <script>def toState = context.testCase.getPropertyValue("v_changeToState")
def customerID = context.testCase.getPropertyValue("v_customerID")
def customerMsisdn = context.testCase.getPropertyValue("v_consumerMsisdn")

log.info ""
log.info "Changing Status of Customer: " + customerID + " / " + customerMsisdn + " to State: " + toState + " ...."</script>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Logon to Console" id="35445f41-f80c-413c-8b00-1a6db1289d54">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Logon to Console" postQueryString="false" mediaType="text/xml" id="fae284f4-33d0-4352-b934-0f0415617d51" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#p_consumerConsole}/j_security_check</con:endpoint>
          <con:request>j_username=${#TestCase#v_consoleUsername}&amp;j_password=${#TestCase#v_consolePass}&amp;locale=${#TestCase#v_consoleLocale}&amp;login=Login</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>j_username</con:name>
              <con:value>${#TestCase#v_consoleUsername}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>j_password</con:name>
              <con:value>${#TestCase#v_consolePass}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>locale</con:name>
              <con:value>${#TestCase#v_consoleLocale}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Enquire Customer Detail" id="f17a82a3-0756-4710-b6b0-ac301ee38ee0">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Enquire Customer Detail" id="e11c943d-af27-4f38-9943-e475b0debfa6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#p_consumerConsole}/admin/customer/MSISDN/${#TestCase#v_consumerMsisdn}/${#TestCase#v_customerID}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Update Customer State" id="08031b62-af75-4b8e-8eb6-cf00633b414a">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Update Customer State" id="022de013-10f6-47f1-a024-0db6a5a7c47a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#p_consumerConsole}/admin/customer/MSISDN/${#TestCase#v_consumerMsisdn}/${#TestCase#v_customerID}/${#TestCase#v_changeToState}</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>v_consoleUsername</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consolePass</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consoleLocale</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_consumerMsisdn</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_changeToState</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>f8d72c0a-82b6-4225-aa75-b83a7a8efaf9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="UtilityLibrary" disabled="true" id="300601c2-2afe-4151-bb8a-ea983bdcc432">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestRunnerSetup" searchProperties="true" id="05708d93-ea01-459d-b031-e354fee2e9c7">
      <con:settings/>
      <con:testStep type="groovy" name="UnloadProperties" id="2c02b0ca-12a5-4517-80de-bc761ced2ca8">
        <con:settings/>
        <con:config>
          <script>// clear PROJECT level properties
for ( prop in context.testCase.testSuite.project.properties) 
{
	context.testCase.testSuite.project.removeProperty( prop.value.name )
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LoadTestRunProperties" id="21fb1ac6-3c5d-4438-b729-88d10091afe2">
        <con:settings/>
        <con:config>
          <script>//
// Load customer parameter for this run from user defined external file
//
def resourceRoot = context.expand(testRunner.testCase.testSuite.project.resourceRoot)
def propertiesSource = "/testrun-properties-" + context.expand('${#TestCase#c_region}') + ".txt"
def filePath = resourceRoot + propertiesSource
log.info "Loading TestRun Properties from file: " + filePath

try 	//open properties file
{
	propertyFis = new FileInputStream(filePath)
} 
catch (Exception e) 
{
	testRunner.fail("Could not find " + propertiesSource + " in data folder.")
	return	
}
props = new java.util.Properties()
props.load(propertyFis)
for ( prop in props) //add and set the properties
{
	if (context.testCase.testSuite.project.hasProperty(prop.getKey()) == false )
	{
		context.testCase.testSuite.project.addProperty( prop.getKey() )
		context.testCase.testSuite.project.setPropertyValue( prop.getKey(), prop.getValue() )
	}
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="AddDefaultProperties" id="79cc1b27-c3f4-45c7-8e13-3e9cca387398">
        <con:settings/>
        <con:config>
          <script>//
// initialise other global properties required for the project's internal use
// (mostly runtime variables)
//

//load properties required during run
def v_props =
[v_requestID:'${=(int)(Math.random()*10000000)}',
v_authToken:'1234',
//v_handsetActivationCode:'0',
//v_customerID:'0',
//v_serverPKT:'0',
//v_serverKeyVersion:'0',
//v_handsetTWK:'0',
//v_handsetEncryptedPasscode:'0',
//v_consumerNewPasscode:'478521',
//v_consumerPasscode:'147852',
//v_handsetEncryptedNewPasscode:'0',
//v_passcodeLength:'0',
//v_newPasscodeLength:'0',
p_userAgent:'soapUI'
]

//add and set all the properties added to the map above
for ( v_prop in v_props)
{
	if (context.testCase.testSuite.project.hasProperty( v_prop.getKey()) == false )
	{
		context.testCase.testSuite.project.addProperty( v_prop.getKey() )
		context.testCase.testSuite.project.setPropertyValue( v_prop.getKey(), v_prop.getValue() )
	}
}
/*
//set passcode length
if (context.testCase.testSuite.project.hasProperty("v_consumerPasscode") == true ) {
	def passcode = context.testCase.testSuite.project.getPropertyValue("v_consumerPasscode")
	def passcodeLength = passcode.size().toString()
	context.testCase.testSuite.project.setPropertyValue("v_passcodeLength", passcodeLength)
} else {
	testRunner.fail("Could not find expected Test Run property: v_consumerPasscode")
}

//set new passcode length
if (context.testCase.testSuite.project.hasProperty("v_consumerNewPasscode") == true ) {
	def passcode = context.testCase.testSuite.project.getPropertyValue("v_consumerNewPasscode")
	def passcodeLength = passcode.size().toString()
	context.testCase.testSuite.project.setPropertyValue("v_newPasscodeLength", passcodeLength)
} else {
	testRunner.fail("Could not find expected Test Run property: v_consumerNewPasscode")
}
*/</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LoadEnvironmentProperties" id="a9160986-cdcc-41d8-9150-30422d548204">
        <con:settings/>
        <con:config>
          <script>//
// Load customer parameter for this run from user defined external file
//
def resourceRoot = context.expand(testRunner.testCase.testSuite.project.resourceRoot)
def propertiesSource = "/environment-properties-" + context.expand('${#TestCase#c_environment}') + ".txt"
def filePath = resourceRoot + propertiesSource
log.info "Loading Environment Properties from file: " + filePath

try 	//open properties file
{
	propertyFis = new FileInputStream(filePath)
} 
catch (Exception e) 
{
	testRunner.fail("Could not find " + propertiesSource + " in data folder.")
	return	
}
props = new java.util.Properties()
props.load(propertyFis)
for ( prop in props) //add and set the properties
{
	if (context.testCase.testSuite.project.hasProperty(prop.getKey()) == false )
	{
		context.testCase.testSuite.project.addProperty( prop.getKey() )
		context.testCase.testSuite.project.setPropertyValue( prop.getKey(), prop.getValue() )
	}
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="ValidateEndpoint" id="1cb68bcd-e2d9-44dc-8cf4-cd310386b340">
        <con:settings/>
        <con:config>
          <script>if (testRunner.testCase.testSuite.project.hasProperty("p_endpoint"))
// check Endpoint property exists
{
	def endpoint = testRunner.testCase.testSuite.project.getPropertyValue("p_endpoint")
	if (endpoint != "")
	// if Endpoint property is not empty
	{
		log.info "Running against ENDPOINT: " + endpoint[7..-1] + ", connectivity verified."
	} else 
	// else if Endpoint property is empty
	{
		testRunner.fail("Endpoint property not set")
	}
	// check endpoint connectivity
	def tc = testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["CheckEndpointConnection"]
	def runner = tc.run( null, false )
	if (runner.status.toString() != "FINISHED")
	{
		testRunner.fail("Endpoint not responding")
	}
// 
} else {
// Endpoint property does not exist then abort 
	testRunner.fail("Endpoint property not found")
}</script>
        </con:config>
      </con:testStep>
      <con:tearDownScript>log.info ""</con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>c_environment</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>c_region</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CheckEndpointConnection" searchProperties="true" id="51cfd7c0-8f02-4b78-bb51-34f027d4cc90" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="restrequest" name="GET_RSAPublicKey" id="abdc8661-2c31-47d3-ac42-2ee8d5454633">
        <con:settings/>
        <con:config service="Monitise Rest Service - Security" resourcePath="/mrs/3/security/RSAPublicKey" methodName="Get Security Key - getSecurityKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET_RSAPublicKey" mediaType="application/xml" id="346be382-c258-4bad-9e81-5e4117277c7a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#p_endpoint}</con:endpoint>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="519704a5-2f7f-4057-a8db-0f643f8b0778">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="User-Agent" value="${#Project#p_userAgent}"/>
              <con:entry key="X-Request-Id" value="${#Project#v_requestID}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenerateMsisdn" searchProperties="true" id="97c750ff-0a36-409a-8883-25b6f22a3700">
      <con:settings/>
      <con:testStep type="groovy" name="generateMsisdn" id="d1f2bc6f-efcb-464c-816b-0c17858a518a">
        <con:settings/>
        <con:config>
          <script>context.msisdnGenerator = new MsisdnGenerator()

class MsisdnGenerator{

	public String getMsisdn(locale, Object databaseConnection) {
	
		def msisdn
		def timeElap
		def retCust = 0

		while (retCust!=null) { 	

			// Generate candidate MSISDN
			timeElap = System.currentTimeMillis().toString()
			switch (locale)
			{
				case 'GB': //UK
					msisdn =  '447000' + timeElap.substring(timeElap.length() - 6)
					break
				case 'US': //USA
					msisdn =  '17000' + timeElap.substring(timeElap.length() - 6)
					break
				case 'CH': //Hong Kong
					def randomNumber = (timeElap.substring(timeElap.length() - 4)).toInteger()
					def randomNumberRangeBound = (int)(randomNumber/2) + 5000 - 50
					msisdn =  '8523700' + randomNumberRangeBound
					break
				default:
					msisdn =  '17000' + timeElap.substring(timeElap.length() - 6)
					break
			}

			// Verify not already used
			retCust = this.countIdentifiersMatchingMsisdn(msisdn, databaseConnection)

		}

		return msisdn
	}
	
	public String countIdentifiersMatchingMsisdn(msisdn, databaseConnection) {	
		
	     	return databaseConnection.db_instance.firstRow("select value as ac from customer_identifier where value = '${msisdn}'") 
	     	
	}
}</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenerateImei" searchProperties="true" id="e5908585-bcc2-4175-bfc7-fc6dbec23681">
      <con:settings/>
      <con:testStep type="groovy" name="generateImei" id="dcd5a16d-4984-40bb-93e9-2a0839a13de0">
        <con:settings/>
        <con:config>
          <script>context.imeiGenerator = new ImeiGenerator()

class ImeiGenerator {

	public String getImei() {
	
		def imei
		def timeElap = System.currentTimeMillis().toString()
		imei = '99' + timeElap
		
		return imei
	}
}</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenerateFirstName" searchProperties="true" id="56f5c1a8-ae5c-484c-b13c-414eea8bd716">
      <con:settings/>
      <con:testStep type="groovy" name="generateFirstName" id="0ea13792-c1a7-40bc-b272-f742d4c91ce6">
        <con:settings/>
        <con:config>
          <script>context.firstNameGenerator = new FirstNameGenerator()

class FirstNameGenerator{

	public String getFirstName(locale) {
	
		def firstName
		
		firstName = this.getRandomFirstName(locale)

		return firstName
	}

	private String getRandomFirstName(locale) {
	
		def firstNameList = this.getFirstName()
		def randomIndex = firstNameList.size() * Math.random()
		def randomFirstName = firstNameList[(int)randomIndex]

		return randomFirstName
	}

	private Object getFirstName() {
	
		def firstNameList = ["Albert","Alberto","Alexa","Alexander","Alice","Alicia","Allie","Althea","Amada","Amada",
			"Amanda","Amy","Andera","Andres","Andrew","Angela","Angelo","Anita","Anna","Anna",
			"Anne","Annie","Anthony","Antonio","Ashley","Barbara","Becky","Ben","Bernadette","Bernadette",
			"April","June","Aaron","Ada","Adam","Adrian","Adriana","Agatha","Alan","Alan",
			"Bert","Bessie","Beth","Betty","Beulah","Beverly","Billy","Bob","Bonnie","Bonnie",
			"Brad","Bradley","Brandon","Brenda","Brian","Bridget","Bruce","Burton","Calvin","Calvin",
			"Carlos","Carol","Carolyn","Casey","Cassandra","Cassy","Catherine","Cathie","Cecil","Cecil",
			"Chad","Charles","Chauncey","Cheryl","Chris","Christina","Christine","Christopher","Claire","Claire",
			"Clayton","Cleta","Clifford","Clinton","Courtney","Craig","Crystal","Cynthia","Damon","Damon",
			"Dan","Daniel","Danielle","Danny","Darlene","Darren","Darryl","Daryl","Deana","Deana",
			"Deborah","Debra","Deirdre","Delia","Delora","Delores","Denise","Dennis","Dewitt","Dewitt",
			"Dexter","Diana","Diane","Dianne","Domenic","Dona","Donald","Donna","Dustin","Dustin",
			"Earl","Edward","Edwin","Effie","Efren","Elaine","Eliseo","Elizabeth","Ellen","Ellen",
			"Elliot","Elsie","Emily","Emma","Eric","Erica","Erin","Estela","Esther","Esther",
			"Ethel","Eva","Evelyn","Faith","Farrah","Fay","Faye","Fernando","Florine","Florine",
			"Floyd","Fonda","Frances","Francis","Francisco","Frank","Freddie","Fredrick","Gabriel","Gabriel",
			"Gail","Gary","Gavin","George","Gerald","Gil","Gilbert","Gina","Gordon","Gordon",
			"Grace","Gregory","Gwendolyn","Harold","Harriet","Harriett","Harvey","Heather","Helen","Helen",
			"Henry","Hilda","Hillary","Hong","Horace","Howard","Hugh","Ian","Ignacio","Ignacio",
			"Irving","Isaac","Iva","Jack","Jacqueline","Jacquelyn","Jacquiline","James","Jane","Jane",
			"Janet","Jarrod","Jason","Jay","Jayne","Jean","Jeffery","Jeffrey","Jennifer","Jennifer",
			"Jenny","Jermaine","Jerome","Jerrell","Jerry","Jesse","Jessica","Jesus","Jimmie","Jimmie",
			"Jimmy","Jo","Joan","Joann","Joanne","Joe","John","Johnnie","Jon","Jon",
			"Jonathan","Jose","Joseph","Joshua","Joy","Joyce","Juan","Juanita","Judy","Judy",
			"Julie","Julio","Ka","Kaci","Karen","Kari","Karin","Karla","Kathleen","Kathleen",
			"Kathryn","Kathy","Kay","Kayla","Kecia","Keith","Kelley","Kelli","Kenneth","Kenneth",
			"Kevin","Kim","Kimberly","Kristin","Kristy","Lance","Larry","Latasha","Lawrence","Lawrence",
			"Leatrice","Lee","Leonard","Leroy","Leslie","Lewis","Lillian","Lillie","Linda","Linda",
			"Lindsey","Lisa","Lloyd","Lois","Lola","Lorelei","Loretta","Lori","Lorretta","Lorretta",
			"Lottie","Louis","Louise","Lowell","Lucy","Luke","Luz","Lynette","Lynne","Lynne",
			"Madeline","Marc","Marcel","Marcus","Margaret","Margarete","Margarita","Margo","Marie","Marie",
			"Mariela","Marilyn","Marion","Marisol","Mark","Marquita","Martha","Marvin","Matt","Matt",
			"Matthew","Maxine","Megan","Melissa","Melvin","Merri","Merry","Michael","Michel","Michel",
			"Michele","Michelle","Mike","Minnie","Molly","Monica","Morris","Moses","Nancy","Nancy",
			"Naomi","Natalie","Nathan","Neal","Neil","Nelida","Nellie","Nettie","Nina","Nina",
			"Nora","Noreen","Norma","Ocie","Ola","Olga","Ollie","Page","Pamela","Pamela",
			"Pat","Patricia","Paul","Paula","Paulette","Pedro","Pete","Peter","Preston","Preston",
			"Priscilla","Rachel","Rafael","Randall","Raul","Ray","Raymond","Rebecca","Reginald","Reginald",
			"Rene","Rex","Rhonda","Ricarda","Ricardo","Rich","Richard","Rick","Rita","Rita",
			"Robby","Robert","Roberta","Roberto","Robyn","Rodney","Ronald","Rose","Rosetta","Rosetta",
			"Roy","Ruben","Ruby","Rudolph","Russell","Ruth","Ryan","Sam","Santos","Santos",
			"Sara","Sarah","Sasha","Scott","Sean","Season","Sergio","Shane","Shannon","Shannon",
			"Shantel","Shawn","Shawna","Shelley","Shirley","Sonja","Stacey","Stacy","Stephen","Stephen",
			"Steve","Steven","Stormy","Sue","Susan","Susanne","Sylvia","Tabitha","Tammy","Tammy",
			"Tara","Teresa","Terrence","Terri","Terry","Thelma","Theo","Theodore","Thomas","Thomas",
			"Tiara","Tiffany","Timothy","Tiny","Todd","Tom","Tommy","Tracey","Tracy","Tracy",
			"Travis","Troy","Tyrone","Valerie","Velda","Velia","Verda","Vernon","Vicky","Vicky",
			"Victor","Victoria","Vida","Vincent","Viola","Vivian","Wade","Wallace","Wanda","Wanda",
			"Warren","Wendy","William","Willian","Willie","Willis","Willy","Wilson","Yolanda","Yolanda"]

		return firstNameList
	}
}</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GeneratePasscode" searchProperties="true" id="c5620040-34a2-4c69-91b9-63c9e96264de">
      <con:settings/>
      <con:testStep type="groovy" name="generatorPasscode" id="8b790dcd-b584-43ff-a86c-33069454c272">
        <con:settings/>
        <con:config>
          <script>import org.apache.commons.lang.RandomStringUtils

String charset = ('0'..'9').join()
Integer length = 6
String randomnum = RandomStringUtils.random(length, charset.toCharArray())
log.info(randomnum)
testRunner.testCase.testSuite.project.setPropertyValue("p_newPasscode","$randomnum")

//def x= context.testCase.testSuite.project.setPropertyValue("p_newPasscode")</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GeneratePan" searchProperties="true" id="7d3ab0d3-1188-4da2-ad81-d85e19732140">
      <con:settings/>
      <con:testStep type="groovy" name="generatePan" id="6751dd5b-6ce6-4038-94c7-42df9637e816">
        <con:settings/>
        <con:config>
          <script>import org.apache.commons.lang.RandomStringUtils

String charset = ('1'..'9').join()
Integer length = 10
String randomnum = "8127" + RandomStringUtils.random(length, charset.toCharArray())

context.customerPan = randomnum</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MessageScriptLogger" searchProperties="true" id="1c217bf0-8271-440c-b2ac-d5e11ad78680">
      <con:settings/>
      <con:testStep type="groovy" name="messageScriptLogger" id="3a781e26-0eb8-4b3d-8ab8-76c747e40362">
        <con:settings/>
        <con:config>
          <script><![CDATA[import org.apache.commons.lang3.StringUtils

context.messageScriptLogger = new MessageScriptLogger()

class MessageScriptLogger{

	public void logMessage(Object log, Object context)
	{
		this.parseMessage(log, context)

		if( (context.expand('${#Project#c_verboseScriptLogging}') == "on") && (context.concise != "on") )
		{
			log.info ""
			log.info "---------------Message details for " + context.requestTestStep.name + "---------------"
			this.logRequest(log, context)
			this.logResponse(log, context)	
			log.info "--------------------------------------------------------"
		}
	}

	public void logRequest(Object log, Object context)
	{
		// log the "signature" of the request (HTTP Method and URI)
		log.info context.requestSignature

		// log request id
		log.info "X-Request-Id : " + context.requestId

		// Other than X-Request-Id, only interested in Cookie response header, but uncomment next line if require full headers to be logged for diagnosis
		//log.info context.requestHeaders
		context.requestHeaders.each {header ->
			if((header.key == "Cookie") && (header.key != null) && !context.requestEndpoint.contains("RSAPublicKey"))
			{
				header.value.each {inner_header ->
					if(inner_header.value.size() >11) {
						context.requestCookie = inner_header.value
						log.info "Cookie : " + context.requestCookie
					}
				}
			}
		}

		// Log request content, if there is any
		if ( (context.requestMethod != "GET") && (context.requestMethod != "DELETE") ) {
			log.info context.requestContent
		}
	}

	public void logResponse(Object log, Object context)
	{
		log.info ""
		
		log.info context.httpStatusLine

		if( (context.responseCookie != null) && (context.responseCookie != "") ) 
		{
			log.info "Set-Cookie : " + context.responseCookie
		}

		if( context.responseLocation != null ) 
		{
			log.info "Location : " + context.responseLocation
		}


		if ( !context.responseHeaders.toString().contains("204 No Content") && !context.responseHeaders.toString().contains("Content-Length : 0") )
		{
			log.info context.responseContent
		}

		//Retain for future use:
		//log.info StringUtils.deleteWhitespace(context.responseContentAsXml)
	}

	public void parseMessage(Object log, Object context)
	{
		context.requestMethod = context.requestTestStep.testRequest.response.getMethod() 
		context.requestEndpoint = context.requestTestStep.testRequest.messageExchange.getEndpoint()
		context.requestSignature = context.requestMethod + " " + context.requestEndpoint

		context.requestHeaders = context.requestTestStep.testRequest.response.getRequestHeaders() 
		context.requestId = context.requestHeaders.get("X-Request-Id","").toString()
		
		def requestContentString = context.expand(context.requestTestStep.testRequest.response.getRequestContent())
		context.requestContent = requestContentString.replace("\n", "").replace("\r", "").replace("\t", "")
		
		context.responseHeaders = context.requestTestStep.testRequest.response.getResponseHeaders()
		context.httpStatusLine = context.responseHeaders.get("#status#","").toString()
		context.responseStatus = context.httpStatusLine.tokenize().get(1)
		
		if( context.responseHeaders.hasValues("Set-Cookie") ) {
			context.responseCookie = context.responseHeaders.get("Set-Cookie","")
		}
		if( context.responseHeaders.hasValues("Location") ) {
			context.responseLocation = context.responseHeaders.get("Location","")
		}

		context.responseContent = context.requestTestStep.testRequest.response.getContentAsString()
		context.responseContentAsXml = context.requestTestStep.testRequest.response.getContentAsXml()
	}
	
}]]></script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MessageScriptLoggerCallTemplate" searchProperties="true" id="dadcd2c3-92ce-41b0-83fa-e846af956ebe">
      <con:settings/>
      <con:testStep type="groovy" name="LogResult" id="7a693ebf-43c3-4daa-92b9-347304e000ac">
        <con:settings/>
        <con:config>
          <script>//get handle on previous test step (assumed to be the message being logged)
currentTestStepNumber = context.testCase.getIndexOfTestStep(testRunner.runContext.currentStep).toInteger()
context.requestTestStep = context.testCase.getTestStepAt(currentTestStepNumber - 1)

//invoke message logger
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["MessageScriptLogger"].testSteps["messageScriptLogger"].run(testRunner, context)
context.messageScriptLogger.logMessage(log, context)

//save results into local property for upstream reference
context.testCase.setPropertyValue("r_messageResultsHolder",context.messageResults.toString())</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TriggerRNTviaJetcoSim" searchProperties="true" id="11584f2a-1351-437c-84b9-bb6f5573994b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings/>
      <con:testStep type="httprequest" name="TriggerRNTviaJetcoSim" id="4bdd93d9-e403-4fda-a387-f0b643d24d29">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="TriggerRNTviaJetcoSim" postQueryString="true" mediaType="application/x-www-form-urlencoded" id="f6f3ecd8-c3c9-426e-afd5-cd8a1513b9fe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#p_endpoint_jetco-sim}</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ff40edd2-176b-4d0d-ad1a-f62487c88906">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3ec01cc1-c897-4ffd-bb28-f5f2b5cbb227">
            <con:configuration>
              <scriptText>//dummy assertion - writing to log only
log.info "Visiting JetCo Sim web page to request RNT message"
log.info ""</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>message.inport1</con:name>
              <con:value>6001</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>6001</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.inport2</con:name>
              <con:value>6002</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>6002</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.inport3</con:name>
              <con:value>6003</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>6003</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.outuri1</con:name>
              <con:value>lon02-ft44-int-01:30281</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>lon02-ft44-int-01:30281</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.outuri2</con:name>
              <con:value>lon02-ft44-int-02:30281</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>lon02-ft44-int-02:30281</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.outuri3</con:name>
              <con:value>lon02-ft44-int-03:30281</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>lon02-ft44-int-03:30281</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.delayValueSec</con:name>
              <con:value>0</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>0</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.refundDelayValueSec</con:name>
              <con:value>0</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>0</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.disableOutMsg</con:name>
              <con:value>False</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>False</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.rid</con:name>
              <con:value>${#TestCase#v_customerRID}</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>1234567890</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.custId</con:name>
              <con:value>${#TestCase#v_customerPan}</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>0</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>action</con:name>
              <con:value>SEND_RNT</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>SEND_RNT</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.pymresp</con:name>
              <con:value>pyma</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>pyma</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>message.pycresp</con:name>
              <con:value>pyca</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>pyca</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="PAUSE for RNT Processing" id="32c024e3-599b-4662-b8e7-e1b7a78f87c7">
        <con:settings/>
        <con:config>
          <delay>7000</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>//Clear all cached cookies (ready to move to Sim web app)
testRunner.testCase.testSuite.project.testSuites["UtilityLibrary"].testCases["ClearAllCookies"].testSteps["ClearAllCookies"].run(testRunner, context)</con:setupScript>
      <con:properties>
        <con:property>
          <con:name>v_customerRID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>v_customerPAN</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ClearAllCookies" searchProperties="true" id="1556072e-9320-4400-9fc0-ac5b7f00fa21">
      <con:settings/>
      <con:testStep type="groovy" name="ClearAllCookies" id="860aa717-68cb-4025-9e60-e22b450a6a86">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport
import org.apache.http.impl.cookie.BasicClientCookie
HttpClientSupport.getHttpClient().getCookieStore().clear()</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeserialiseMapFromString" searchProperties="true" id="beabf61d-fd57-4dd0-b947-770aafe66eb5">
      <con:settings/>
      <con:testStep type="groovy" name="deserialiseMapFromString" id="5a81c0c6-0751-450d-acbb-3861bfc18015">
        <con:settings/>
        <con:config>
          <script>context.deserialiseMapFromString = new DeserialiseMapFromString()

class DeserialiseMapFromString {

	public Map getMap(String serialisedMap) {
	
		def deserialisedMap = [:]

		serialisedMap = serialisedMap[1..-2]  //remove outer brackets [ ]

		serialisedMap.splitEachLine(","){
		   it.each{ pair ->
		     def splitPair = pair.split(":")
		     deserialisedMap.put(splitPair[0].trim(), splitPair[1])
		   }
		}
		return deserialisedMap
	}

}</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DatabaseConnection" searchProperties="true" id="7ef00170-a9f1-4735-9d77-faf35fee307b">
      <con:settings/>
      <con:testStep type="groovy" name="OpenDatabaseConnection" id="4d13055f-5f22-463b-b292-76daf8bb9d14">
        <con:settings/>
        <con:config>
          <script>com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(context.expand('${#Project#p_dbDriver}'))
import groovy.sql.Sql

//creates an instance of class DatabaseConnection and creates a new database connection
context.setProperty("databaseConnection", new DatabaseConnection())
context.databaseConnection.openConnection(log, testRunner, context)

class DatabaseConnection{

	def db_instance

	public void openConnection(Object log, Object testRunner, Object context)
	{		
		def db_username = context.expand('${#Project#p_dbUsername}')
		def db_password = context.expand('${#Project#p_dbPassword}')
		def db_sid = context.expand('${#Project#p_dbSID}')
		def db_driver = context.expand('${#Project#p_dbDriver}')

		try {
			db_instance = Sql.newInstance(db_sid,db_username,db_password,db_driver)
		}
		catch (Exception e) {
			log.info "Database connection failure: " + e
		}
	}

	public void closeConnection()
	{
		db_instance.close()
	}

}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="CloseDatabaseConnection" id="894977dd-2b7f-490e-8b54-2ff337c26c03">
        <con:settings/>
        <con:config>
          <script>//log.info "Closing database connection"
context.databaseConnection.db_instance.close()</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="QueryMaker" searchProperties="true" id="91a99f46-64a5-47f8-a6be-f138041e3170">
      <con:settings/>
      <con:testStep type="groovy" name="QueryMaker" id="1c0debf8-fe84-40af-b811-8e77a453f879">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner

context.queryMaker = new QueryMaker()

class QueryMaker{

	public String queryActivationCode(customer_id, Object dbConnection )
	{
		def activationCode_sql = """select activation_code as act_code from customer_provision_profile 
		where client_customer_id = $customer_id"""

		def activationCode_query = dbConnection.db_instance.firstRow(activationCode_sql)
		def activationCode = activationCode_query.act_code

		return activationCode
	}

	public String queryCustomerId(application, msisdn, Object dbConnection )
	{
		def customerId_sql = """select client_customer_id as customer_id from customer_provision_profile 
  		where msisdn = '$msisdn' 
  		and application_id = 
    		(
      		select application_id from application 
      		where application_name = '$application'
    		) 
    		order by customer_provision_profile_id desc"""

		def customerId_query = dbConnection.db_instance.firstRow(customerId_sql)
		def customerId = customerId_query.customer_id

		return customerId
	}

	public String queryCustomerState(String customerID, Object dbConnection )
	{
		def customerState_sql = """select state as st from customer 
  		where customer_id = '$customerID'"""

		def customerState_query = dbConnection.db_instance.firstRow(customerState_sql)
		def customerState = customerState_query.st

		customerState = this.getCustomerState( customerState.toString() )

		return customerState
	}

	public String queryMsisdnCustomerIdentifier(String customer_id, Object dbConnection )
	{
		def customerIdentifier_sql = """select customer_identifier_id as cid_id from customer_identifier 
  		where customer_id = '$customer_id' 
  		and type = 'MSISDN'
    		order by customer_identifier_id desc"""

		def customerIdentifier_query = dbConnection.db_instance.firstRow(customerIdentifier_sql)
		def customerIdentifier = customerIdentifier_query.cid_id

		return customerIdentifier
	}

	public String queryRIDCustomerIdentifier(String rid, Object dbConnection )
	{
		def customerIdentifier_sql = """select customer_identifier_id as cid_id from customer_identifier 
  		where value = '$rid' 
  		and type = 'RID'
    		order by customer_identifier_id desc"""

		def customerIdentifier_query = dbConnection.db_instance.firstRow(customerIdentifier_sql)
		def customerIdentifier = customerIdentifier_query.cid_id

		return customerIdentifier
	}

	public String queryCustomerIdentifierStatus(String customerIdentifierID, Object dbConnection )
	{
		def customerIdentifierState_sql = """select state from customer_identifier 
  		where customer_identifier_id = '$customerIdentifierID' 
  		and type = 'RID' 
		"""

		def customerIdentifierState_query = dbConnection.db_instance.firstRow(customerIdentifierState_sql)
		def customerIdentifierStatus = customerIdentifierState_query.state

		customerIdentifierStatus = this.getCustomerIdentiferStateName( customerIdentifierStatus.toString() )

		return customerIdentifierStatus
	}

	public String queryDeviceToken(String customer_identifier, Object dbConnection )
	{
		def customerIdentifierDeviceToken_sql = """select device_token as dt from customer_provision_instance 
  		where customer_identifier_id = '$customer_identifier' 
    		order by customer_identifier_id desc"""

		def customerIdentifierDeviceToken_query = dbConnection.db_instance.firstRow(customerIdentifierDeviceToken_sql)
		def deviceToken = customerIdentifierDeviceToken_query.dt

		return deviceToken
	}

	public int countBankAccounts(inState, customerId, Object dbConnection )
	{
		def bankcard_count_sql = """select count(*) as bankcard_count from bankcards 
		where customer_id = '$customerId' 
		and state= '$inState'"""

		def bankcard_count_query = dbConnection.db_instance.firstRow(bankcard_count_sql)
		def numberOfbankAccounts = bankcard_count_query.bankcard_count

		return numberOfbankAccounts
	}

	public String getCustomerState(String stateCode)
	{
		def stateCodeName
		switch (stateCode) {
			case '1' : stateCodeName = 'ACTIVE'; break
			case '2' : stateCodeName = 'DELETED'; break
			case '3' : stateCodeName = 'SUSPENDED'; break
			case '4' : stateCodeName = 'AWAITING_PIN'; break
			case '5' : stateCodeName = 'NEW_PIN_REQUIRED'; break
			case '6' : stateCodeName = 'NEW_PIN_REQUESTED'; break
			default  : stateCodeName = 'UNKNOWN'
		}
		return stateCodeName
	}

	public String getCustomerIdentiferStateName(String stateCode)
	{
		def stateCodeName
		switch (stateCode) {
			case '1' : stateCodeName = 'REGISTERED'; break
			case '2' : stateCodeName = 'ACTIVE'; break
			case '3' : stateCodeName = 'DELETED'; break
			default  : stateCodeName = 'UNKNOWN'
		}
		return stateCodeName
	}
	
}</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="QueryRecordSingleTable" searchProperties="true" id="c7ce0813-ed11-445f-b0f2-e2551676ac4e">
      <con:settings/>
      <con:testStep type="groovy" name="queryRecordsSingleTable" id="ed22f2ce-668e-46b5-a83d-fa103cde6acf">
        <con:settings/>
        <con:config>
          <script>// Script assume database connection available in context from calling script
context.queryRecordsSingleTable = new QueryRecordsSingleTable()

//def table = "customer"
//def colList = ['customer_id','state']
//def keyMap = ['customer_id':'1006243']
//context.queryRecordsSingleTable.logDatabaseRecords(log, context, table, colList, keyMap)

class QueryRecordsSingleTable {

	public void fullCustomerStatusLog(Object log, Object context, String openingMessage, String customerID, String customerIdentifierID)
	{
		if ( (customerID == "" || customerID == null) )  {
			log.error "CustomerID not found. Unable to get updated status of Customer."
		} else {
			log.info ""
			log.info openingMessage
			this.logDatabaseRecords(log, context, "customer", ['customer_id','state'], ['customer_id':customerID])
			this.logDatabaseRecords(log, context, "customer_identifier", ['customer_identifier_id','type','value','state'], ['customer_id':customerID])
			this.logDatabaseRecords(log, context, "customer_provision_profile", ['MSISDN','state','terms_accepted'], ['client_customer_id':customerID])
			this.logDatabaseRecords(log, context, "customer_provision_instance", ['GUID','device_token'], ['customer_identifier_id':customerIdentifierID])
//			this.logDatabaseRecords(log, context, "customer_provision_profile", ['MSISDN','state','terms_accepted','activation_code_send_count','act_code_failed_attempts'], ['client_customer_id':customerID])
	//		context.queryRecordsSingleTable.logDatabaseRecords(log, context, "customer_provision_instance", ['device_token','version','GUID'], ['customer_id':customerID])		
		}
	}

	public String logDatabaseRecords(Object log, Object context, String table, Object colList, Object keyMap)
	{
		def databaseRecords = []
		def selectClause = this.buildselectClause(colList,table)
		def whereClause = this.buildWhereClause(keyMap)
		def query = selectClause + whereClause

		if (whereClause == '') {
			log.warn("No keys provided. Unable to complete database record query for: " + table)
		} else {
			databaseRecords = this.queryRecords(context, query)
		}
		databaseRecords = this.decorateResults(databaseRecords, table, colList)
		
		this.logRecords(log, databaseRecords, table)
	}

	public Object queryRecords(Object context, query)
	{
		def recordList = context.databaseConnection.db_instance.rows(query)
	}

	public Object decorateResults(Object databaseRecords, String table, Object colList)
	{
		String stateCode
		String stateCodeName
		if ( table == 'customer' &amp;&amp; colList.contains('state') ) {
			databaseRecords.each { customerRecord ->
				stateCode = customerRecord.STATE.toString()
				stateCodeName = this.getCustomerStateName(stateCode)
				customerRecord.STATE = stateCode + " - " + stateCodeName
			}
		}
		if ( table == 'customer_identifier' &amp;&amp; colList.contains('state') ) {
			databaseRecords.each { customerRecord ->
				stateCode = customerRecord.STATE.toString()
				stateCodeName = this.getCustomerIdentiferStateName(stateCode)
				customerRecord.STATE = stateCode + " - " + stateCodeName
			}
		}
		return databaseRecords
	}

	public String getCustomerStateName(String stateCode)
	{
		def stateCodeName
		switch (stateCode) {
			case '1' : stateCodeName = 'ACTIVE'; break
			case '2' : stateCodeName = 'DELETED'; break
			case '3' : stateCodeName = 'SUSPENDED'; break
			case '4' : stateCodeName = 'AWAITING_PIN'; break
			case '5' : stateCodeName = 'NEW_PIN_REQUIRED'; break
			case '6' : stateCodeName = 'NEW_PIN_REQUESTED'; break
			default  : stateCodeName = 'UNKNOWN'
		}
		return stateCodeName
	}

	public String getCustomerIdentiferStateName(String stateCode)
	{
		def stateCodeName
		switch (stateCode) {
			case '1' : stateCodeName = 'REGISTERED'; break
			case '2' : stateCodeName = 'ACTIVE'; break
			case '3' : stateCodeName = 'DELETED'; break
			default  : stateCodeName = 'UNKNOWN'
		}
		return stateCodeName
	}

	public String buildselectClause(Object colList, String table)
	{
		String selectClause = ''
		
		if ( colList.size() == 0 ) {
			selectClause += ('select * from ' + table + '\n ')
		}
		else if ( colList.size() == 1 ) {
			selectClause += ('select ' + colList.getAt(0) + " from " + table + '\n ')
		}
		else if ( colList.size() > 1 ) {
			selectClause += 'select '
			selectClause += colList.join(', ')
			selectClause += " from " + table + '\n '
		}
		return selectClause
	}

	public String buildWhereClause(Object keyMap)
	{
		String whereClause = ''
		def keys = keyMap.keySet() as String[]
	
		if ( keyMap.size() >= 1 ) {
			whereClause += "where " + this.buildSingleWhereClause(keyMap, keys[0])
		}
		if ( keyMap.size() > 1 ) {
			for ( keyItem in 1..(keyMap.size()-1) ) {
				whereClause += "\n and "
				whereClause += this.buildSingleWhereClause(keyMap, keys[keyItem])
			}
		}
		return whereClause	
	}

	public String buildSingleWhereClause(Object keyMap, keyItem)
	{
		return keyItem + " = " + keyMap.getAt(keyItem)
	}

	public void logRecords(Object log, Object databaseRecords, String table)
	{
		databaseRecords.each {record -> log.info table + " record: " + record}
	}

}</script>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>c_verboseScriptLogging</con:name>
      <con:value>on</con:value>
    </con:property>
    <con:property>
      <con:name>p_applicationIssuer</con:name>
      <con:value>JETS</con:value>
    </con:property>
    <con:property>
      <con:name>p_applicationName</con:name>
      <con:value>PCCW</con:value>
    </con:property>
    <con:property>
      <con:name>p_carrier</con:name>
      <con:value>PCCW MOBILE</con:value>
    </con:property>
    <con:property>
      <con:name>p_currency</con:name>
      <con:value>HKD</con:value>
    </con:property>
    <con:property>
      <con:name>p_locale</con:name>
      <con:value>CH</con:value>
    </con:property>
    <con:property>
      <con:name>v_requestID</con:name>
      <con:value>${=(int)(Math.random()*10000000)}</con:value>
    </con:property>
    <con:property>
      <con:name>v_authToken</con:name>
      <con:value>1234</con:value>
    </con:property>
    <con:property>
      <con:name>p_userAgent</con:name>
      <con:value>soapUI</con:value>
    </con:property>
    <con:property>
      <con:name>p_endpoint_jetco-sim</con:name>
      <con:value>https://lon02-ref02-int-03.func.monitise.net:8443/jetco-atmx-sim/jetco-sim</con:value>
    </con:property>
    <con:property>
      <con:name>p_mrsVersionPath</con:name>
      <con:value>/mrs/3</con:value>
    </con:property>
    <con:property>
      <con:name>p_dbUsername</con:name>
      <con:value>REF33_PERF</con:value>
    </con:property>
    <con:property>
      <con:name>p_endpoint</con:name>
      <con:value>https://lon02-ref33-app-01.func.monitise.net:8443</con:value>
    </con:property>
    <con:property>
      <con:name>p_dbPassword</con:name>
      <con:value>l0nd0nbr1dg3</con:value>
    </con:property>
    <con:property>
      <con:name>p_dbDriver</con:name>
      <con:value>oracle.jdbc.driver.OracleDriver</con:value>
    </con:property>
    <con:property>
      <con:name>p_jdbcDriver</con:name>
      <con:value>oracle.jdbc.driver.OracleDriver</con:value>
    </con:property>
    <con:property>
      <con:name>p_dbSID</con:name>
      <con:value>jdbc:oracle:thin:@lon02-db-07.func.monitise.net:1521:MATM7</con:value>
    </con:property>
  <con:property><con:name>p_newPasscode</con:name><con:value>737885</con:value></con:property></con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting>
    <con:reportTemplates>
      <con:name>Sample TestSuite Report</con:name>
      <con:reportType>TESTSUITE</con:reportType>
      <con:reportLevel>MAINREPORT</con:reportLevel>
      <con:data><![CDATA[<jasperReport xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="ReportTemplate" language="groovy" pageWidth="595" pageHeight="842" columnWidth="555" leftMargin="20" rightMargin="20" topMargin="30" bottomMargin="30" xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <property name="ireport.encoding" value="UTF-8"/>
   <template>"../../styles.jrtx"</template>
   <!--FIELDS & PARAMS-->
   <title>
      <band height="70">
         <textField>
            <reportElement x="159" y="13" width="229" height="42"/>
            <textElement>
               <font size="26"/>
            </textElement>
            <textFieldExpression class="java.lang.String">$F{name} + " Report"</textFieldExpression>
         </textField>
      </band>
   </title>
   <pageHeader>
      <band/>
   </pageHeader>
   <detail>
      <band height="122">
         <!--SUBREPORTS UNDER HERE-->
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{FailedTestSteps}</dataSourceExpression>
            <subreportExpression>"subreport:FailedTestStepsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{ReportMetrics}</dataSourceExpression>
            <subreportExpression>"subreport:MetricsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{ProjectCoverage}</dataSourceExpression>
            <subreportExpression>"subreport:ProjectCoverageChart"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestProperties}</dataSourceExpression>
            <subreportExpression>"subreport:PropertiesReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestCaseCoverage}</dataSourceExpression>
            <subreportExpression>"subreport:TestCaseCoverageChart"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestStepResults}</dataSourceExpression>
            <subreportExpression>"subreport:TestStepResultsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestSuiteCoverage}</dataSourceExpression>
            <subreportExpression>"subreport:TestSuiteCoverageChart"</subreportExpression>
         </subreport>
      </band>
   </detail>
</jasperReport>]]></con:data>
      <con:subreports>FailedTestStepsReport</con:subreports>
      <con:subreports>MetricsReport</con:subreports>
      <con:subreports>ProjectCoverageChart</con:subreports>
      <con:subreports>PropertiesReport</con:subreports>
      <con:subreports>TestCaseCoverageChart</con:subreports>
      <con:subreports>TestStepResultsReport</con:subreports>
      <con:subreports>TestSuiteCoverageChart</con:subreports>
      <con:scope>PROJECT</con:scope>
    </con:reportTemplates>
    <con:reportTemplates>
      <con:name>Sample TestReport</con:name>
      <con:reportType>TESTSUITE</con:reportType>
      <con:reportLevel>MAINREPORT</con:reportLevel>
      <con:data><![CDATA[<jasperReport xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="ReportTemplate" language="groovy" pageWidth="595" pageHeight="842" columnWidth="555" leftMargin="20" rightMargin="20" topMargin="30" bottomMargin="30" xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <property name="ireport.encoding" value="UTF-8"/>
   <template>"../../styles.jrtx"</template>
   <!--FIELDS & PARAMS-->
   <title>
      <band height="70">
         <textField>
            <reportElement x="159" y="13" width="229" height="42"/>
            <textElement>
               <font size="26"/>
            </textElement>
            <textFieldExpression class="java.lang.String">$F{name} + " Report"</textFieldExpression>
         </textField>
      </band>
   </title>
   <pageHeader>
      <band/>
   </pageHeader>
   <detail>
      <band height="122">
         <!--SUBREPORTS UNDER HERE-->
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{FailedTestSteps}</dataSourceExpression>
            <subreportExpression>"subreport:FailedTestStepsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{ReportMetrics}</dataSourceExpression>
            <subreportExpression>"subreport:MetricsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{ProjectCoverage}</dataSourceExpression>
            <subreportExpression>"subreport:ProjectCoverageChart"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestProperties}</dataSourceExpression>
            <subreportExpression>"subreport:PropertiesReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{RequirementLinkedTestCases}</dataSourceExpression>
            <subreportExpression>"subreport:RequirementLinkedTestCasesReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestProperties}</dataSourceExpression>
            <subreportExpression>"subreport:RequirementsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{SecurityScanResults}</dataSourceExpression>
            <subreportExpression>"subreport:SecurityScanReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{SecurityTestStepOverviewResults}</dataSourceExpression>
            <subreportExpression>"subreport:SecurityTestStepOverviewReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{SecurityTestStepResults}</dataSourceExpression>
            <subreportExpression>"subreport:SecurityTestStepReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{SecurityTestStepScanListResults}</dataSourceExpression>
            <subreportExpression>"subreport:SecurityTestStepScanListReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestCaseCoverage}</dataSourceExpression>
            <subreportExpression>"subreport:TestCaseCoverageChart"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestStepResults}</dataSourceExpression>
            <subreportExpression>"subreport:TestStepResultsReport"</subreportExpression>
         </subreport>
         <subreport isUsingCache="true">
            <reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="500" height="30"/>
            <dataSourceExpression>$P{TestSuiteCoverage}</dataSourceExpression>
            <subreportExpression>"subreport:TestSuiteCoverageChart"</subreportExpression>
         </subreport>
      </band>
   </detail>
</jasperReport>]]></con:data>
      <con:subreports>FailedTestStepsReport</con:subreports>
      <con:subreports>MetricsReport</con:subreports>
      <con:subreports>ProjectCoverageChart</con:subreports>
      <con:subreports>PropertiesReport</con:subreports>
      <con:subreports>RequirementLinkedTestCasesReport</con:subreports>
      <con:subreports>RequirementsReport</con:subreports>
      <con:subreports>SecurityScanReport</con:subreports>
      <con:subreports>SecurityTestStepOverviewReport</con:subreports>
      <con:subreports>SecurityTestStepReport</con:subreports>
      <con:subreports>SecurityTestStepScanListReport</con:subreports>
      <con:subreports>TestCaseCoverageChart</con:subreports>
      <con:subreports>TestStepResultsReport</con:subreports>
      <con:subreports>TestSuiteCoverageChart</con:subreports>
      <con:scope>PROJECT</con:scope>
    </con:reportTemplates>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
</con:soapui-project>